{
  "pid": "61358d971c5d56efe5bcb5d2",
  "eid": "67a37e41d74435e4a34a2df4",
  "title": "201.字节上线Trae，AI编程赛道打响2025第一枪",
  "task_id": "3vl8qg4lzxb4qpr2",
  "transcription": [
    {
      "time": "00:00:02",
      "text": "兄弟，我们好久不见你在哪里？",
      "speaker": "发言人1"
    },
    {
      "time": "00:00:06",
      "text": "嘿朋友，如果真的是你请招呼。欢迎来到龙黄叔，我们咱们就准备开始。就是1月19号字节跳动他新加坡那家子公司就发布了一项面向海外的AI编程工具，名字有点难读，应该读翠是吧？它支持AI问答代码自动补全，基于代理的AI编程各种的功能。然后这个工具它还可以选择中文或者英文。他也接入了一些OpenAI跟那个topic，他们的最新的模型可以供大家免费使用，当然现在是迈克的，大家已经可以去测试了，windows还在预约之中。然后我们就今天来聊一聊这个毳和AI编程。三位嘉宾先做一个自我介绍，从orange你开始。",
      "speaker": "发言人2"
    },
    {
      "time": "00:00:54",
      "text": "大家好，我是orange，我现在是一个是我有个公众号叫橘子汽水铺，然后在极客还有X上叫orange AI然后目前还在创业，有个公司叫火星电波，就这些。",
      "speaker": "发言人3"
    },
    {
      "time": "00:01:11",
      "text": "孙老师，大家好，我是孙志刚，我现在是个创业者，正在做一个叫AI师傅的产品。之前我最早是个程序员，然后当了大学老师，后来从大学辞职，然后又开始在把这网易干过得到干过一直在线教育这个圈子里面折腾，最近两年却在玩AI。",
      "speaker": "发言人4"
    },
    {
      "time": "00:01:34",
      "text": "这孙老师是真的是老师，不管他本职工作还是这些年的确是做了非常多人的老师，跟我们这种没老师是不一样的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:43",
      "text": "我是有教师资格证的。",
      "speaker": "发言人4"
    },
    {
      "time": "00:01:47",
      "text": "兰溪老师。",
      "speaker": "发言人2"
    },
    {
      "time": "00:01:49",
      "text": "别，这我就不敢说老实了，我是也是放在直播间的老熟客了，是一个科技博主。今天来的这两位嘉宾，我也一直是对他们久仰大名，对，一直是在网上关注很久的。",
      "speaker": "发言人1"
    },
    {
      "time": "00:02:02",
      "text": "OK好OK那咱们就不寒暄，直接往主题里面来切。就比如说orange，我看你还发了个公众号说你上周末刚学会编程，结果这周字节就发布了这个AI编程工具。听到这个消息是啥感受？",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:20",
      "text": "当时我第一感觉是感觉我这在蹭热点。对我其实是上周就已经约好这课了。我周六去线下跟super黄从两点学到了晚上7.1下午。然后第二天字节的朋友跟我说，我们明天要上线一个A编程工具。我说你们这个节奏太巧了。对，然后就周一就上线了，就是感觉自己的速度实在太快了。",
      "speaker": "发言人3"
    },
    {
      "time": "00:02:44",
      "text": "那你有使用吗？使用下来是一个什么感受呢？有啥？比如说亮点的功能。",
      "speaker": "发言人2"
    },
    {
      "time": "00:02:51",
      "text": "对，用了一下。它的基本功能跟我就是学的那我用的是v serve的学，跟winter 5还蛮像的。它现在就是第一版，就是会少一些功能。好的点是说它的这个界面比一般的这个VS code的这种套壳的都好明显好很多，明显设计过的。另外就是它是一个对中文知识非常友好的一个工具，因为有时候那个模型有时候还是会吐英文。比如说用别的工具的时候，它这可能这个系统prom的是偏中文的，所以对中文比较友好，功能其实差不太多。志刚其实我。",
      "speaker": "发言人3"
    },
    {
      "time": "00:03:25",
      "text": "在我们看起来的话，非常感觉这个tree应该说和cursor什么的相似度还是比较高的。就功能上来说不是有特别太大的区别，再看不太出来。但是有意思的一点是，就我周围的好多程序员，因为已经是买了coco，然后他们会说等着这一期的费用到期了之后，就好好的试试吹。因为免费，免费还是有吸引力的。",
      "speaker": "发言人4"
    },
    {
      "time": "00:03:51",
      "text": "OK我看还有很多人说他们那个预览的功能也不错。那我想问一个问题，就是当可以使用自然语言编程之后，未来这个AI编程的产品，它竞争是否是全球品牌一起来竞争？它不存在国家或者地区或者语言的区隔，还是说其实是每个地方不同的文化，不同语种它他也有他自己本地化的需求，都需要得认真的去当地做运营。不能说就不可能说，因为他免费就会有人用到。但是我说的可能有点矛盾，我就说他是不是应该去为某些特定的群体，是不是所有人都只需要用一个，还是说需要不同的产品去为不同的人群优化。",
      "speaker": "发言人2"
    },
    {
      "time": "00:04:32",
      "text": "其实我觉得是不大需要的。因为基本上对于程序员来说的话，但凡做了程序员的，可能在开发的方面就对语言上、中文、英文上就不会是太大的问题。目前能够看到说，可能从专业程序员角度，国外的那些开发的工具相对比较差一点的，就是对开发小程序支持的不算太好，小程序是中国独有的一种东西，它不是一个世界化的。所以其他的角度，只要说这个语言、这个环境、这套技术是世界性的，那么就没有什么本质的区别。但是如果换另一个角度来说，现在的开发工具都开始AI化了以后，倾向于越来越多的是让小白非常去来用。这个就不一样了，这个肯定会非常的不一样。",
      "speaker": "发言人4"
    },
    {
      "time": "00:05:18",
      "text": "怎么个不一样法？",
      "speaker": "发言人2"
    },
    {
      "time": "00:05:20",
      "text": "最简单来说，如果说你这个产品上来之后提一个需求，你先把界面设计出来。其实中国人习惯的和喜欢的界面与外国人习惯喜欢的就是不一样的。我们就看X看微博，我们看各种产品之间的这种，哪怕电商产品、社交产品之间的区别，都是有一些不一样的地方的。这个地方肯定就跟本土文化是相关的了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:05:44",
      "text": "对，以及不同的运费群，他付费能力，他的习惯都不一样。我就听朋友给我举了两个最极端的，也就是说北美的IOS用户跟东南亚的安卓用户对吧？这其实不应该化作一个类别的用户来看。",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:00",
      "text": "是的，但就是今天大家都讨论这个AI编程，讨论代码这个事情。其实是自从人类有埃踢产业以来，大家一直都在想这个低代码零代码的事情。我就记得疫情刚开始的时候，不是20年21年SARS行业特别火。然后我也跟钉钉、飞书这些公司有过一些沟通。那时候各家都在说低代码，但好像过去几年，尤其是当这个AI编程来了之后，好像这个低代码就没啥声音了。就是这什么因素？这个行业好像突然之间就从低代码实现了往AI编程这个转变？",
      "speaker": "发言人2"
    },
    {
      "time": "00:06:36",
      "text": "我就简单说一下我的理解。我的理解是这样低代码它的通用性还是太差了，就是它能做的事儿就是被这种平台什么的，定制的比较死一些。它用在真实业务的时候能解决问题就比较少。然后AI来了之后，其实AI本身是一个很通用的东西。所以AI有一些低代码平台，比如说像cos或者defi这种其应用还蛮广的对，原来那种传统的代码可能用的就比较有限。然后AIAI编程本质上就是一个完全通用，所以他就实际上是一个有点降维打击的感觉。这样的来讲讲。",
      "speaker": "发言人3"
    },
    {
      "time": "00:07:11",
      "text": "我倒可以提供另一个不没有不是不不是专业，只是说另一个角度的一个观点。因为我有个朋友，他就在网易，网易有一个叫code wave的低代码平台。他们现在还发展的挺好的，也很受老板的重视。他们看到的是说低代码这个和AI来了之后，他们感受到的是他们这个低代码会更有机会发挥作用。原因是在于什么呢？所以说AI编程降低了这个编程的门槛的。所以说低代码的这个编程门槛这件事儿有点不太存在。",
      "speaker": "发言人4"
    },
    {
      "time": "00:07:45",
      "text": "编程天天降低了。但是AI编程现在最典型的问题是说，你做细节控制的时候会遇到好多好多的障碍。宏观它能动的还行，但细节会有各种各样的问题。而低代码的天然已经准备好了各种各样的小组件、小控件，小的什么数据存储、过程管理一些的各种各样的东西。这些东西它使得你用AI编程做整体的胶水代码，完成整体的串联。每个小细节已经有现成的工业化做的很好的东西在那个地方呈现。这个时候就保证了宏观和细节都能在一个很可控的一个范围里面。这是他们看待AI编程对低代码的这种影响。所以现在就我那个朋友就是在code wave这个产品里，他就是负责AI编程这个部分。他们是做了大量的工作来用AI帮着他们的用户完成一个低代码系统的搭建了全过程的事情。",
      "speaker": "发言人4"
    },
    {
      "time": "00:08:39",
      "text": "还是推荐一下评论区有人说这个飞速度为表格，这个零代码的废除读韦表格搭建自己的业务系统，也有很多的行业事件。因为我感总感觉DW我并不说。对，我们继续往这个议题往下走，就是当AI加持之后，一开始其实像是这个吉他ub像这个copilot就是这一类的插件来说，帮大家去做这种代码补齐。然后后来像是咳嗽，包括今天的脆，他其实都是做AIADE这一块的。就是他不去做插件，去做这种独立的产品。他其实是因为我我我理解，是因为这个AI它能够调动的模块，可以把更多的融合度变得更强。然后AI变成它就变成了一个大家火热的一个赛道。然后我只是看别人总结，总结说这是co pilate跟auto co pilate一个差别，就是orange。你给我们解释一下这种差别指的到底是啥。",
      "speaker": "发言人2"
    },
    {
      "time": "00:09:32",
      "text": "我今天还稍微列了一下，现在这种这个赛道产品已经有差不多9到10款比较流行的了。最难用的或者说最需要用户水平比较高的就是客户copilot。他一开始就是一个补全，他需要的是。程序员真懂代码，能够会写代码，能写写一半给补全剩下的另一半。所以这是可拍了的一个基本的模式。然后cosa winsor还有tree这3款他们可以理解为是copilot的。",
      "speaker": "发言人3"
    },
    {
      "time": "00:10:01",
      "text": "往上走了一层，就是我可以用自然语言去设计一个产品。我用自然语言去让AI去帮我解决一个bug，或者让AI去设计一个小的模块。所以它其实把这个门槛降低了很多，同时也解锁了这种比如说像我们产品经理，还有运营同学，都可以用这种工具来去做一些东西了。然后再往上走是像V零和那个boat new这种产品的话，它就是一个云端的环境都给你搭好了。然后它内置了很多组件库，你就可以有想做什么，他就能直接给你做出来。不太需要在本机上去做很多东西，也不太需要学它网站上有很多模板现成的用，然后还往上走，就是更基础的一些，比如像artifact，还有就是昨天还是新上了一个朋友，新上的叫黑boss。它这个里边是把那个open I的接口，m max接口都已经连上了，你都不用去再去搞这API什么key什么的。就是你你只要输入需求，它就可以自动给你组合成一个消防页，就有好这么好几层的东西，分别就面向了不同的人群。",
      "speaker": "发言人3"
    },
    {
      "time": "00:11:14",
      "text": "这个老师补充一下。",
      "speaker": "发言人2"
    },
    {
      "time": "00:11:15",
      "text": "其实我我觉得最典型来说，现在的其实各个领域的产品就是AI编程算是一个典型的。各个领你的产品基本上都出现了这么一种两层的分化的状态。一种是面向专业人士，我帮助你提升效率，像copt类型的都属于这种类型的。另一类是属于我面向非专业人士，以前你干不了这个活，现在你用上我之后，你就能把这事给干了。比如说AI绘画很多其实也都属于这种。像我不会画画，借了一个AI绘画工具，我就能画出画来了，都属于这样的这种性质的那编程领域里面就也是像刚才orange举例的那个copilot，包括通义灵码，他这些都是属于面向专业程序员的。",
      "speaker": "发言人4"
    },
    {
      "time": "00:12:02",
      "text": "像那个boat点6，像是那个V0，他们在出的这个阶段的时候，他更多的是面向的是非专业程序员咳嗽。其实坦率讲，我觉得他应该归类到专业程序员这种角度。只不过我其实没弄太清楚，为什么非专业程序员用起它来的时候也那么的爽。这个我可能需要去观察一些情况去看。但它本质上来说还是面向专业程序员，以这个角度为出发点去做的这是这两类最典型的一个不同。",
      "speaker": "发言人4"
    },
    {
      "time": "00:12:34",
      "text": "那么像coco为什么比copilot他们现在会更受到欢迎？有一个很重要的一个因素是在于不管是cursor还是tree，他们的基本的逻辑是我基于VS code。这个现在最流行的一个代码编辑器，基于它之上做了一番大型的改造。而那些copt之类的，他们都是这些编辑器的插件。插件会受到很多的编辑器本身开放的接口限制。这个不能干那个不能干，但是我在你的基础之上进行魔改，那我就突破了你的一切限制，我什么都可以做了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:13:12",
      "text": "最典型像咳嗽里面实现的那个功能，就是你你你在这一个地方改代码。如果这段修改会对其他地方产生影响，它就会自动的告诉你别的地方要改，它自动给你都标出来要改，然后你点接受就能改完了。像他这样的这种能力，其实VS code它本来是没有提供这种接口的，所以copilot也实现不了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:13:33",
      "text": "当然了这个copt也好，VS code也好，都是微软的。它后面可能把这个东西就会逐渐的接口化，就是说它自己就能做到了。但是这个能看出来他们之间进化的一个区别。",
      "speaker": "发言人4"
    },
    {
      "time": "00:13:45",
      "text": "就是面向专业人士写代码，面向非精通代码人士去写需求，类似这种。",
      "speaker": "发言人2"
    },
    {
      "time": "00:13:52",
      "text": "孙孙老师这边有一个评论写的我觉得很到位。那个评论这么说的，说非专业程序员用sr也很爽，就是像不会拍照的人用上了自动模式的拍照相机。你们在跟我互动的时候，我再跟你们考古一下。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:10",
      "text": "就是在在03年04年的时候，大家应该是听过一个叫易语言的一个中文编程语言。那个时候我当时还上大学，有人用这个东西写外挂。为什么大家他们会用这个东西写外挂呢？因为当时写外挂的人很多是初中毕业的人，看不懂英文，就你给他一个PHP或者那个东西他看不懂。但是议员当时他打的口号就是降低了编程的门槛。虽然他也是那样一套，但是至少你可以不用去学英文。你用中文那一套就能够从它封装的一些功能，一些模块里面直接就写出一些很好玩的程序出来。",
      "speaker": "发言人1"
    },
    {
      "time": "00:14:45",
      "text": "我觉得最开始的这个降低编程语言，一开始其实是一个语种上的一个降低门槛。就是很多人不懂英文。其实到现在其实你看过了，其实大概20年，二十多年的时间。其实这个AI编程这个东西，其实把语种这个东西，把这个成本直接给切掉了。这是实现了一个真正的一个自然语言。就我们认为当时的那种汉语编程、中文编程其实是一个伪自然语言。其实你还是要遵守。",
      "speaker": "发言人1"
    },
    {
      "time": "00:15:09",
      "text": "那一套规范。OK. 我们继续往下推，我就好奇，就比如说AI过去这两年里面，其实大家是各种都说是自己的元年，就是各种领域都有尝试，就是年年在播圈，年年是元年，然后年年不赚钱。就包括2024年，就是大家预期的那个AI应用爆发也没来。然后我们看到有大模型的创始人就已经说那个应用不太重要，这个专注技术就行了。那为什么我好奇这个AI编程可以变成例外？可以甚至应该可以说吧，就是整个AI全赛道里面，AI coding是唯一一个盈利的赛道。尤其是过去这半年里面，很多的创业公司都迅速的有特别膨胀的估值，就是拿了一轮又一轮的融资。为什么现在这个赛道它这么发展这么好？",
      "speaker": "发言人2"
    },
    {
      "time": "00:16:00",
      "text": "我觉得首先有有一件事儿可能很多人并不知道的。就是AI编程这个赛道它开始的很早，它比ChatGPT出来的都早，也就是get hub的copilot是比ChatGPT还早一年上线的。所以它首先至少积累的时间是足够长的这是一点。但这不是核心，最核心的要素是在于，如果说一个AI的一个产品，它影响它效果最主要的是来自于模型，这个基本是毋庸置疑的。而现在一直以来所有的大模型里面，它能够完成的所有的任务里面，这个都是公认的编程任务是完成的最好的。也就是说现在AI编程能够去爆发，很大因素是在于模型能力。",
      "speaker": "发言人4"
    },
    {
      "time": "00:16:47",
      "text": "把编程这个事儿完成的已经很不错了。虽然没到非常好，但是基本上就是说你超越这个初级中级的程序员是一点问题也没有的一点问题。就初中级是可以被AI轻松碾压的，他达到了这样的一个水准，那么其他赛道说不像他跑这么快。那那你可以讲，比如说大家这个都是写字儿的，你们相信你们觉得AI写出的文字能打多少分呢？60分、70分可能是这个样子，但是绝对不到能发表的级别，对吧？这就是这个模型能力上的一个差距。",
      "speaker": "发言人4"
    },
    {
      "time": "00:17:21",
      "text": "然后在另外一个还有一个很重要的一件事情是，就是所有的AI应用，他要想找到PMF的话，很重要的事情是你做这个产品的人。你这里面的技术的人的对那个市场那个业务领域特别的了解。而AI编程做他的人是程序员，服务的也是程序员，他特别的了解。所以这些因素综合到一起，就使得它我觉得可以作为一个样板型的。",
      "speaker": "发言人4"
    },
    {
      "time": "00:17:52",
      "text": "我一直就建议大家经常就建议朋友就是说你不管做什么领域，你都研究一下AI编程这个领域。你看这里面发生的事情有好多东西其实类比过来可以看到别的领域为什么AI还没有发挥巨大作用。你就可以看是缺什么条件就能补什么。这是一个非常好的样本，就是一个AI应用落地实践的一个样本。",
      "speaker": "发言人4"
    },
    {
      "time": "00:18:13",
      "text": "我读一下评论区说因为他真实的给工程师带来了极大的提效，而工程师自己吃饭的工具投资的性价比非常高。也有人说这跟大模型它天然契合，是更严谨的一种语言，工程师严谨算法这都在一块。对，然后你的确是什么法律大模型，什么声纹，哪怕是给我去升一个提纲，我感觉都不好用。我为这一次我们的这个直播，我把各个大模型都让他给我提了30个问题，我最后加起来也大概也就用了两三个问题。就是不行，我都在上面，我觉得就不值得我在上面干。但你觉得这玩意儿它跟工程师，天然气使用者是工程师，然后创造他的人也是工程师。我就好奇你刚才说其他的人也其他赛道可以参考，那我就好奇这个AI编程是不是就是属于专门为工程师准备的垂直大模型？",
      "speaker": "发言人2"
    },
    {
      "time": "00:19:04",
      "text": "也不能这么讲，他他首先现在其实很少有编程的垂直模型，尽管有的话，但那种垂直模型它的编程能力也并不比通用的模型更强。因为所有的通用大模型一定会把训练编程能力当做一个很重要的指标，很重要的一件事情去做这个事儿的原因就在open I的一篇论文里就讲过。Open应该是GPT3的那篇论文里面，他就特别说明了他们在训练的某个阶段的时候，把编程把程序代码当做训练数据去再去。继续训练就发现这个模型的推理能力迅速提升了，跳跃式的提升，这是写在他论文里的一个东西。后来有人分析说，为什么说可能就跟我们现在让小孩子学少儿编程一样，说学少儿编程的锻炼逻辑思维，可能就是这样的一个原因。因此的话就所有训练大模型的都会把编程当做很重要的能力去做对应的训练。因此有一些专门的垂直的一些模型，其实是从这种大模型在蒸馏出来的。小型的模型的编程能力，本身每个模型都是很强的那是不是就因为。",
      "speaker": "发言人4"
    },
    {
      "time": "00:20:12",
      "text": "pro orange，就是因为你们都是程序员，然后其实模型它有时候还不够成熟，他尽管能力已经很强了，他有时候也会导致输出结果不稳定。你像如果说我们这些看那个输出结果就是觉得实在不能忍。但对你来说的话，是不是就可能其他人可以骂娘，但你们可能还凑合着可以上前去用。因为从他的输入输出，你们都特别理解这个道理。",
      "speaker": "发言人2"
    },
    {
      "time": "00:20:37",
      "text": "这个问题我不是程序员，我是产品经理。然后我其实都没有学过，我大学也没学过，我大学专业是对外汉语。",
      "speaker": "发言人3"
    },
    {
      "time": "00:20:45",
      "text": "然后那你为什么觉得它更可用呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:20:48",
      "text": "更可用变成这个事情对我来说是说，首先是上次是我跟那个花生有做那个小猫补光灯那个作者，我们俩聊了一会，他其实也是一个以前在美团，也算是一个偏运营和用户的产品岗的同学，就是从零开始用cose r他一点点，他一边用一边学，慢慢就学会了。所以做了那个消防补光灯那个工具虽然也不复杂，但它确实解决了一个很小的问题，而解决的非常好。这就回到俞军老师那本书，他讲过说第一条说用户需求有一个特点是说需求是不可被满足的。就是大部分的需求其实因为没有经济价值，或者说LI算不过来，因为成本很贵，他没有办法被满足。而现在因为有了这个AI编程，很多的小需求就可以被满足了。",
      "speaker": "发言人3"
    },
    {
      "time": "00:21:36",
      "text": "举个例子，就是说我做的一第一个产品是一个生成表情包的一个工具。这个工具给我老婆用，她就非常喜欢天天用。就输入任何一个表情，它可以生成一个非常魔性的一个猫狗的表情包。然后包括我朋友做了一个过年的表情包，给他妈做的也是这样。因为现在自己想做什么事情，AI真的可以做出来了，他依然不能说我去抢程序员饭碗，但程序现在也不会去花时间做这些事情，因为他没有经济价值。这个是一个新的解锁。",
      "speaker": "发言人3"
    },
    {
      "time": "00:22:06",
      "text": "比如如果今天这些做AI扣定的产品，他们在就比如说去他其实是面向更专业的开发者，那些复杂的工程场景的对吧？所以我就好奇就是这种专业开发者跟小白开发者，他在这个AI编程需求上他有什么不一样呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:22:26",
      "text": "我自己就算是因为刚学会一周，就纯小白开发者我的需求是其实我完全不看代码，就是用自然语言沟通，我就看结果。对，拥有bug所以我就做前端会更顺一些，做后端就很难。所以后端的话就是有两个办法，一个办法就是说用像cos这样的去编排一工作流。然后另一个办法是说，比如说需要用到数据库了，那就用多维表格当数据库用。有它性能肯定不够，但是凑合用还是可以。对小白来说就是都是可视化的对专业的话其实志刚老师可以补充一下。对。",
      "speaker": "发言人3"
    },
    {
      "time": "00:23:03",
      "text": "就是我观察到的有一个挺有意思的现象是说，如果是新做一个东西，这个时候其实所谓的小白会用AI编程用的很爽。专业程序员其实用AI编程往往不是在于新建一个东西，是因为它更多的是帮助自己去完成一些已经历史上遗留的别的代码，去进行升级维护，是做这个角度的事情。然后这种反过来说的话，它就很有意思的这件事情什么呢？就是对于小白来说，已有的代码往往是没有维护能力的，又或者说也许没有维护价值。因为做的东西可能就是一次性的做出来自己用一用，很爽。简单的改一改，其实也不是不想把它推出去，长期维护也没有这个价值，对吧？",
      "speaker": "发言人4"
    },
    {
      "time": "00:23:50",
      "text": "但是对专业程序员来说，虽然也有用这种AI编程工具完成最初始的框架的搭建。但是更多的其实还是会相信说要靠自己的专业性去把这个起始的一些必要的很讲究的那些框架的东西去给它去做好。还不是特别的信赖AI能够完成的事情。",
      "speaker": "发言人4"
    },
    {
      "time": "00:24:12",
      "text": "对你来说它起到作用可能是10%，对那个orange可能是百分之百，类似于这种。",
      "speaker": "发言人2"
    },
    {
      "time": "00:24:19",
      "text": "可能我觉得可就这样。专业程序员现在基本上统计下来，工作效率的提升是能在10%到50%之间，大概是这样的一个状态。但是非专业程序员来说的话，提升我觉得可能是十倍的提升，甚至100倍的提升。因为它是从零变成了一个能做出来。",
      "speaker": "发言人4"
    },
    {
      "time": "00:24:39",
      "text": "对，就比如说现在这个AI编程都有哪些探索的方向呢？就比如说前几个月大家就是讨论那个头条，各家头条都开始咳嗽，然后怎么最近像这个boss new生意也多了。起来应该是包括杰刚发群里面一个链接，说他们刚获得1亿美元的融资。奥伦杰你要不要梳理一下，当前这个AI编程赛道都有哪些当红炸子机，然后他们这个路线有啥不同？",
      "speaker": "发言人2"
    },
    {
      "time": "00:25:08",
      "text": "好，其实现在最火的其实是boss new，就磕sir不是第一名，boss new是第一名。这么快。对，为啥是第一名？它最早就是他在给他的节奏和那个cloud 3.5是基本同期，在他俩是互相成就。3.5因为他出名，他也因为3.5能力升级被大家知道。但实际上现在专业程序员这块，他们口碑上来说是when serve要更好一些。入门程序员也就是像我们这种新手陈小白，就是更喜欢boss new波特。",
      "speaker": "发言人3"
    },
    {
      "time": "00:25:43",
      "text": "这个东西非常它是一个前端，前端非常容易出成果。我波特就是我是国内第一个可能给他写公众号的，去年的时候写了一篇，那个有点夸张，就是我让他写一个抖音，我就说写一个抖音出来，他就把抖音的界面都写出来了，里面还有视频在播放，还能上下滑动。我当时就震惊了，我说一个prof怎么能写成这样，但是他肯定没有连后端，就复杂的东西都没有然后包括他写小红书也是，他就写了小红书那种瀑布流，都铺满了图片。那个给新用户带来的那种震撼是巨大的，它不需要任何学习成本，真的是一句话就出来一个东西，所以它很容易传播。其实像科sir他定位其实一直还是蛮程序员用户。程序员这个群体，而且一直有这个copilot这么多年的心智，他在切内网用户，他自然就可能增长没有那么快。",
      "speaker": "发言人3"
    },
    {
      "time": "00:26:38",
      "text": "我就是好奇一个问题，那个boat new您会续费吗？或者说他的续费情况怎么样？因为我不知道这样的人群，他会持续不断的每个月都有自己想做的东西吗？",
      "speaker": "发言人4"
    },
    {
      "time": "00:26:50",
      "text": "是这样，他每天免费用量特别多，基本上四五次就能做出一个页面。但是我们没有上线过，他也可以直接部署。但是当时我是抱着一个玩儿的心态在玩，就是在用，所以也没有续费。但是那个NSF可咳嗽这种就是必须上来就得付费，就只能付费。",
      "speaker": "发言人3"
    },
    {
      "time": "00:27:09",
      "text": "对，所以你刚才说的那个boss new是第一名，你指的是用户量还是说营收的角度？",
      "speaker": "发言人4"
    },
    {
      "time": "00:27:16",
      "text": "用户数应该是第一，营营收可能没有那么高。对。",
      "speaker": "发言人3"
    },
    {
      "time": "00:27:22",
      "text": "我估计应该是他应该比不过另外两个。",
      "speaker": "发言人4"
    },
    {
      "time": "00:27:27",
      "text": "这种就有人问国内的产品里，人家不是国内的，不要不要说人人是一个面向海外的产品，你应该说这是一个海外设计。提供中文界面的产品里面去算是最好用的吗？你可以把最后那个猫去掉。因为其他人没有为你提供中文界面，没有提供更流畅的一整套为你优化。",
      "speaker": "发言人2"
    },
    {
      "time": "00:27:49",
      "text": "我们继续。比如说像这个科input，就好像是这整个这一类的产品，它都是在你cloud 3.5之后。对，刚才就是orange也提过，他特别依赖模型的能力，然后他在能力上也没有超过像这个模型的范畴。当提到这个些产品的时候，我其实我经常会想到一直被人说jasper那个例子就是跟那个ChatGPT放在一块。那个时代的例子就是产品他到最后会不会就是一个管道，其实就是一个对大模型能力的一个传导。我其实好奇就是这些不管你们提各个方向的这些产品也好，他们这些AI编程产品的护城河到底是什么？是高级的套壳吗？我觉得。",
      "speaker": "发言人2"
    },
    {
      "time": "00:28:32",
      "text": "AI产品唯一的护城河应该就是用户心智，或者叫品牌，这个是最重要的。因为其他的能力都很容易被别人给复制和抄走。就功能性等等的。尤其AI应用。确确实实现在做一个AI应用，就开发过程就能明确的感觉到工作量比以前做一个应用要少得多。",
      "speaker": "发言人4"
    },
    {
      "time": "00:28:54",
      "text": "它其实在薄薄的一层，大量的能力都是依靠底层的模型，所以他他做的事儿还是重要，但是量并不大，然后也没有什么太多的门槛。因此它更重要的是需要你早点退出去，然后早点做宣传，被大家认可，然后形成对你的认知。就像说你看比如说那个cloud现在在行业里面，圈子里面，可能大家对他特别的认可。但是你放到整个大的范围里面，它的GPT这个品牌性仍然。",
      "speaker": "发言人4"
    },
    {
      "time": "00:29:26",
      "text": "是第一位的那我就好奇，比如说你像这么好的赛道，就你刚才也说，就比如说那个cloud它模型能力今天已经更优了。包括我看这个咳嗽，他其实之前是OpenAI投资的，但后来他转投了这个Sophia他们的模型。我看最近朋友圈里面好几个人说说，现在还有人认为OpenAI就是最强的模行，就是最强模型出自OpenAI，这就是一个最简单的智商检测器。这是什么时候改变的？什么时候开始发生了这么大的一个变化？这个行当因为顶上我们小白用户了，觉得都OpenAI。",
      "speaker": "发言人2"
    },
    {
      "time": "00:30:02",
      "text": "另外那家公司是啥？对吧？我觉得就是3.5 cloud，3.5 snet那个版本。那个版本出来之后，各方面，其实大家都发现它很强。然后编程就是最显著的可衡量的强。他其实去年anthropic吃掉了open a10%的B端市场，就是赚钱方面他还是挺强的。",
      "speaker": "发言人3"
    },
    {
      "time": "00:30:22",
      "text": "然后其实今年就刚刚也聊写作那件事情，就现在好多模型写作水平还是很低。但是我最近用google的新的flink模型，那个模型我觉得他的水平已经超过我。虽然还是一个实验性的模型，很多bug老说俄语，但是我觉得他已经超过。可能我觉得过一个月正式上线之后，大家也会他真的很牛逼。今天正好何在投也刚发了一篇文章，也吹了一下这个模型，他就变得desk。对，deep sik对对对，deep sik也是那个推理模型，就是推理这件事情，我没想到的是推理把写作整体拉上来，有google个google那个也是那个推理模型，有google那个比OE和deep sk那个模型写作都要强一点，还蛮神奇的。",
      "speaker": "发言人3"
    },
    {
      "time": "00:31:12",
      "text": "我就想起前两天评论师说他也在说趁着自己免费，他也试用下这个去来写稿。不是写代码，就是因为这玩意儿它是为写代码准备的，对吧？这个产品所以它会控制每个步骤的输出，推理过程都需要你手工去确认。那其实就意味着你不需要他等到给出错误答案之后，你再去告诉他怎么调整，而是直接去控制他每一步的对错。也就是说这对于写稿子来说就有点可以。就是在每一个章节可以能够显著的增加你对于这AI生成内容的控制，避免央视写了有的结果。",
      "speaker": "发言人2"
    },
    {
      "time": "00:31:47",
      "text": "发现错了，我我其实我一直在用copilot写我的公众号的文章，真的是很好用。",
      "speaker": "发言人4"
    },
    {
      "time": "00:31:55",
      "text": "对，其实有很多人说过，说应该做一个珂sr写作版什么的，确实有人写不花生也用科室给他写专利的报告书，因为可控性太强了。大魔前段时间出了个报告。",
      "speaker": "发言人3"
    },
    {
      "time": "00:32:09",
      "text": "说95%的IPO的上市招股书都可以用AI去写成，剩下只有5%的价值是在他们公司了。再再投好了。",
      "speaker": "发言人1"
    },
    {
      "time": "00:32:19",
      "text": "是我觉得这个好。",
      "speaker": "发言人3"
    },
    {
      "time": "00:32:21",
      "text": "我特别需要请翠评论师的实验步骤，然后去做一个小小的公开课，让我们这些媒体老师好好学习一下怎么使用。聊到使用，我们就往这个用途上来聊聊，我们再聊这个AI编程本身，比如刚才都提到花生，然后今年一个非常好的案例就是小猫补光灯，然后登上APP store第一。但他应该怎么来看这个现象呢？对，就是这种产品志刚你先说，但我我我是说这个问题，他是想我其实是想到另外一个问题，就是小猫补光灯从名字听说好像就是为一群人准备的，但它并不是一种那种感觉。大众的那个产品，感觉一开始做的时候，应该是不是去做通用软件的那种感受，对吧？因为如果通用的那就不需要通过AI编程来做了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:33:17",
      "text": "小猫补光灯是一个现象级的一个产品。然后它的成功我觉得很大因素是在于花生这个人本身，他是运营出身，这点很重要。因为有太多程序员做出很棒的东西，但是因为不懂运营，不懂推广，然后就天天孤芳自赏，这样的非常的多。所以小猫补光灯它它的成功是在于它有一个非常强大的这种推广的能力。再加上他对用户需求在那个时刻的一个确实是捕捉到了。他们完全讲他做找到这个需求的过程，那个过程有点戏剧化，但是他本身就其实在我们的日常生活当中无处不在的，他就捕捉到了。然后借着AI编程，现在有了这样的能力，他把这个东西实现出来了。就是所谓的他有一个爵士的点子，他也是一个营销天才，就差一个程序员了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:34:09",
      "text": "现在程序员是AI编程，这是他的一个典型成功的所有的要素齐备的一个基本的一个条件。然后他这个是不是能复制？这到现在为止还没看到第二例，我至少没看到第二例，但是我看到了大量的说不像他那样子成为那么成功。但是能够用AI编程去解决自己日常工作、学习生活当中的一些零零碎碎的各种各样的小需求，能让自己开心。这样的案例其实是已经开始越来越多的了。我觉得这种情况可能才是未来AI编程最大发挥价值的地方。就是我做软件不是为了给别人用，我就是让自己舒服，自己爽，提升自己的效率。",
      "speaker": "发言人4"
    },
    {
      "time": "00:34:54",
      "text": "也就是他有可能自己做软件，就是一个人去使用的场景，而且是越定制越好。有可能他频次就一次。",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:01",
      "text": "就跟那个对，可能一天一次就拉倒了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:35:05",
      "text": "对我就想这个往上面引申一点的话，是不是通用产品他就不需要AI编程。因为如果有网络效应，有规模效应，这种产品它直接大厂或者说那个创业公司就直接团团团队去告了，对吧？这是不是这个A编程其实跟大模型是一个类似的。它的底层程学其实是在解决长尾问题，对吧？因为它没有网络效应，它是在制造内容。这其实让我想到一个东西，就因为这个AI编程它做到最后，如果是对譬如说对orange来说，它产生了它其实不是代码，它其实产生的是一个一个的软件，或者说是一个一个的产品。",
      "speaker": "发言人2"
    },
    {
      "time": "00:35:43",
      "text": "我就想套用一下那个比特跟原子的对比一样，这是不是就有点像说的那种比特世界的三弟打印机。我就之前看张楠说开发布会说那个极梦就是剪映的那个AI版是想象力的相机。我就觉得像这种翠，它是不是就是那种想象力的3D打印机？就是我要我有就是我我要一个软件，然后生产出来对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:09",
      "text": "数字世界的3D打印机有点像。不过我我我先说一下反驳一下你前面前一半部分那个那个观点。对，通用的软件它也需要AI编程，只不过通用软件它不是靠AI编程，纯粹AI编程就能完成的。在现在至少来看是这个样子。我觉得在很长的时间范围内，可能也许都很难，他还是需要大量的人的介入。但是这个人他也会大量的借用AI编程。就是现在专业的程序员已经很少有不用AI编程的了，只不过是明着用和偷着用的区别就有很多。偷着用不敢让老板知道，不敢让leader知道。",
      "speaker": "发言人4"
    },
    {
      "time": "00:36:48",
      "text": "那不是应该公司在积极采购这些东西，因为我记得谁说过，他其实是刚才不是说很容易检测到底用了多少吗？",
      "speaker": "发言人2"
    },
    {
      "time": "00:36:57",
      "text": "这事儿这个也有意思，就拿AI编程在企业里落地这个东西也能类比说你其他的我什么AI销售AI客服AI什么设计师AI的等等。一切在公司里落地的这种场景，就是这种提效的东西，它确实是天然带着一个原罪，就是降本增效。就是可能你的这个生产效率提升了，就导致人数会降低，就会发生裁员。这个天然的想象力就是在这个地方的。所以如果你这家公司的老板CTO没有去很好的去协调处理好这种问题的话，那么大家其实未必是拥抱，可能是抵制。",
      "speaker": "发言人4"
    },
    {
      "time": "00:37:40",
      "text": "甚至我是见到真实的，见到有一些公司里面是CTO带头抵制，就是我们不要搞AI编程，说你一搞AI编程的话，我们的代码就全被微软知道了。老板说那不行，我们的代码不能让AY知道。那那我不搞AI编程了，为什么？因为什他说A边上来了之后，比如说每个人提升了30%的工作效率，真的提升之后，老板下一个问题就是了。那你的团队是不是可以裁掉3分之1的人了？那作为CTO肯定不希望自己的人少，对吧？所以这个里面是一个就这样的这种一个博弈的这么一个状态。",
      "speaker": "发言人4"
    },
    {
      "time": "00:38:19",
      "text": "也是说另外一个问题，其实首先今天大部分公司都是在让工程师使用这个AI编程的。但我觉得你的问题特别好玩，你这个问题有点哲学性。你这个问题其实说这个工程师其实跟我们某种层面上都属于知识工作者，对吧？你说这个问题往深里说，就是AI它到底是会解放知识工作的时间，能够让我们有更多时间去思考，还是让知识工作者，让工程师虽然提升了十倍生产力，但是更辛苦了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:38:51",
      "text": "这个我觉得得看老板的角度怎么看。老板如果你真把大家当成知识工作者，那么说你现在工作效率提升了，那么我就让你多点时间休息，多点时间娱乐，多点时间的去思考一些AI干不了的事儿。那是挺好的，这个大家都愿意，真的。但是就怕老板不拿你当知识工作者，当脑力工作者，当你是个就是个体力活。你一天能写多少行代码，就拿这个去卡你那肯定是你的效率是提升十倍。那么工作量就。压到10倍O.",
      "speaker": "发言人4"
    },
    {
      "time": "00:39:23",
      "text": "K我们还是回到一个具体的，比如说AI编程使用的一些细节里面说，比如说orange你用编程去解什么问题呢？就是你之前是一个产品经理，然后你其实是新学的。",
      "speaker": "发言人2"
    },
    {
      "time": "00:39:37",
      "text": "我这几天做了有小十个项目。我学的第一个就是一个表情包，表情包这个一开始我他的默认模板是一个柴犬的，然后我老婆跟我说她喜欢猫的，我就改成了猫的，然后她就每天用很开心。然后第二个给我老婆做的产品是就是她每天纠结要吃什么东西，然后我就给他做了一个那种类似转盘的东西，他就可以点一下，明天就知道吃什么。然后刚也说到说这个东西就是一个很长尾的，很个性化的东西。所以我在这个产品界面上直接就把名字改成了他我老婆名字，说他的名字今天吃什么就送给她的，别人都凉，就非常的不一样。对，然后我今天早上还我看到兰溪在小红书发那个长文的时候，我都会切成一堆卡片。然后我也想发，我想这个卡片这个软件，一年200块钱，就这么简单的东西，我写一个不得了吗？就好像我自己写的话也就半小时，所以这个就是这小需求，我觉得节能满足还挺好的，包括就这类。",
      "speaker": "发言人3"
    },
    {
      "time": "00:40:44",
      "text": "现在你说小红书发长图发切图我刚充了一个莫问的会员。因为它有一个提供了这个能力，对，就是模板可以提供。对。",
      "speaker": "发言人2"
    },
    {
      "time": "00:40:54",
      "text": "就这个小功能其实沸点它是痛点。",
      "speaker": "发言人3"
    },
    {
      "time": "00:40:58",
      "text": "这又回到刚才说为自己用，然后是更多常规需求，但是不跟那个专业的工程师他使用，完全不矛盾，这是不同矛盾不同人的使用场景。因为人的需求其实非常多，就跟公司里面当年为什么会有低代码，不就是工程师太少了吗？或者说因为工程师太贵了。",
      "speaker": "发言人2"
    },
    {
      "time": "00:41:14",
      "text": "对对对吧？是对，这其实我我深有体会。因为我们公司刚成立，现在就两个工程师，就是没有前端我们就怎么办呢？让工程师献血。那个V0就是把set CN那些组件都弄好了，你就说需求把后端接口扔给他他给你做出来了。然后工程师他也是现学前端，然后这几天就加速了。我觉得50%以上OK.",
      "speaker": "发言人3"
    },
    {
      "time": "00:41:40",
      "text": "我就看这，譬如说啐他他说他的核心命题是这个人机协作产品理念是从co plus上auto polite去演变。我想问一下志刚老师，就是在实际的开发过程中，像这些AI编程，它跟人工编程它是怎么更好的协作的。然后这种协作模式它对于如果对于这种职业的开发者来说，对于专业的人来说，它的开发效率和代码质量有什么影响？",
      "speaker": "发言人2"
    },
    {
      "time": "00:42:09",
      "text": "这是个很很有意思的问题。其实如果我我我讲具体的代码，可能也许今天很多听众没有直接编过，不会有很多的感觉。我觉得大家可以这么想象，就是我们在我们任何每一个人自己最擅长的领这里面，如果配给你一个实习生跟你一起干你愿意还是不愿意？这实际上具备什么样的能力，你愿意跟他一起做？他什么样的表现让你不愿意跟他一起干干熟了以后配组合的合作的多了以后，你们会形成一种什么样的协作的状态。",
      "speaker": "发言人4"
    },
    {
      "time": "00:42:43",
      "text": "这个就是程序员和AI编程之间的这种关系。就是用熟了之后，其实就是这个程序人员会对这个AI的能力就非常的了解。他就这件事儿是我干快还是他干快，一秒判断出来我干更快。别费他了，跟他讲半天讲不明白，然后这个还不如我自己两下就敲好了。那就自己干这件事儿，让我弄的话，东点西点东拖拽拽，我烦我不愿意做，他干很快，一句话布置给他他就去完成了。他就是这样的这么一个协作的过程。所以他并没有说完全明确的分工，没有明确的谁干啥。但是总控权就是在我们人的手里面，我们可以随时的支配他，鞭打他，然后PUAT，然后反正有问题有结果也可以让他继续改等等，就是这么一个完全协作状态。所以copilot这个名字起的真的非常好，就是副驾驶这个起的非常好，他就是这样的一个协作往前去走这个状态。",
      "speaker": "发言人4"
    },
    {
      "time": "00:43:43",
      "text": "如果我们回到就比如说这种to b的场景，在公司内部的场景，就比如说像对他服务的这些专业的工程场景。在之前企业的数字化，它其实大部分都都最后其实是需要靠程序员来解决，就是像低代码这些也试图去解决，然后最后觉得他肯定不如我们跟他聊过肯定不如AI编程。但即便到今天，像大公司里面那些财务、行政、采购这些部门，他们的数字化需求，他其实大概率都是我先提个需求到IT部门，对吧？然后IT部门把它翻译成他理解的需求去做落地。那些原来不具备IT能力的那些公司，也包括在公司里面那些不具备IT能力的个人，他们今天可以怎样的通过AI编程参与到优化业务流程的工作里面去呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:44:37",
      "text": "其实最典型的举个例子来讲，就因因为我我那个AI师傅我这个产品它本身里面就有一门用AI教的课，就叫跟AI学编程，里边教的就是AI编程。所以我那里面就很深的有一个学员，他是不方便讲具体的背景了，但反正他就是属于典型的业务部门。平时要处理大量的文件，然后他就用AI编程写出了python的代码。帮他把这个文件进行各种各样的分类整理、重命名，然后组合什么什么一系列的这样的东西。他就是这样的方式就完成了让他的工作效率就提升了，很多很多繁琐的工作就减少了，工作幸福感就提升了。那在以前这种事情一定得找IT部门做，IT部门一定不愿意做对。",
      "speaker": "发言人4"
    },
    {
      "time": "00:45:25",
      "text": "以前我们模型公司做那个评测，也是在那个评测平台上线之前，都是写个脚本，自己写个脚本给他去批量跑。就现在也是就用A编程就可以自己搞。以前的话就得求助程序员，关键这个事儿也不算他们OKR，他们也不愿意做。",
      "speaker": "发言人3"
    },
    {
      "time": "00:45:41",
      "text": "是其实像产品经理看到这个AI编程之后，比如像苏泊尔谎行的，你看他他一开始的时候那个兴奋，因为非常典型，就产品经理以前都是属于绰号叫程序员鼓励师，就是还想求个困难的人员求求资源。对，把我这个需求做了看吧，然后说凭什么试，拿数据来，没上线哪有数据。对，就这种梗非常多个，但现在就是我管他三七二十一，我现在AI就一个原型搭出来了，先跑起来，先用起来了，先试着看看了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:46:13",
      "text": "这感觉是非常爽。如果我们就在公司这个场景里面，个人另说，在公司这个场景里面，往后面能够用好AI编程的，它会是什么样的角色？它会是那种平民化的，可能是这种一线员工里面的那些聪明的人，还是那种甲方的专家化的。就是他有编程的思维，然后也占业务海康的那些运营，还是说乙方的专家，他可能就是原厂或者说代理商，或者说做客户成功的就是哪一个类型的，以及这样真的到那天之后，程序员的角色是不是就被弱化了呢？",
      "speaker": "发言人2"
    },
    {
      "time": "00:46:47",
      "text": "我觉得这事儿可能得分两个阶段，第一个阶段的话，一定是这个里面相对来说比较先锋一点的，好奇心重一点点的。然后喜欢探索新鲜事物的人会首先的站起来。产品经理这个行当应该说离这个最近的了。但是其实现在我了解到的产品经理里面，其实也只是非常少的一部分开始研究AI编程。来去拿它去改变一些自己的工作流程，或者是提升自己的能力等等的。这个一定是少量的人，这是在第一个阶段，所以它不局限在哪个岗位，不局限在你是甲方还是乙方。只要这个人他现在有好奇心，有探索欲，那么就是可以开始做起来。",
      "speaker": "发言人4"
    },
    {
      "time": "00:47:32",
      "text": "第二个阶段，应该是当AI应用这种工具普及度比较高的那个时候。那个时候我的判断是这样，很多人他已经不知道自己其实已经在用AI编程了也就是你跟这个应用进行交互的时候，让他帮你解决一个问题。比如一个AI助理，他背后可能是他现实场给你夸夸夸写了一堆代码，然后完成了这项工作。但是他不呈现给你这个代码，你也不知道他其实写的代码。完成这工作之后，代码他就删了。你下次再找他做，他重新再写，再来完成这个工作。这就有点像那个ChatGPT里头不就带coding interpret这个功能。它里面做做数据分析的时候，它就是在后台还是先写代码，然后完成这个数据的处理，拿到结果再呈现给你，告诉你数据结果是什么什么样子的。后面应该逐步的更多的是这种形态。",
      "speaker": "发言人4"
    },
    {
      "time": "00:48:23",
      "text": "OK. 那我们再问一下个人，他是什么体感？比如我在极客里面其实看到一条评论，他就是说这个脆太好用了，这就是那种产颜射韵四合一的快乐。",
      "speaker": "发言人2"
    },
    {
      "time": "00:48:38",
      "text": "我没有，我是好奇它还能支持运维吗？",
      "speaker": "发言人4"
    },
    {
      "time": "00:48:41",
      "text": "好像没有运本身可能是产运，就跟花生一样，自己本身就会这个，所以他就加上这个周就四个人。",
      "speaker": "发言人3"
    },
    {
      "time": "00:48:49",
      "text": "接触啊啊啊这运指的是运营。",
      "speaker": "发言人4"
    },
    {
      "time": "00:48:52",
      "text": "对他肯定是运营，这个就人家的那个有时候排在那个都排在社后面了。对，比如说orange你在使用比如说你在使用脆的时候，你是一个什么样的使用心得？",
      "speaker": "发言人2"
    },
    {
      "time": "00:49:08",
      "text": "我讲的那个心得，首先入门这个东西，首先是需要你把一些有一些基础设定，这其实不支持这个功能，就有点尴尬。那个问事我其实可以就做的比较好，就是一定要让AI去先把所有代码的思路写到一个read me里面。然后他没让没写的代码，一定要让AI能够告诉你他做了什么事儿。包括他在新起一个项目的时候，一定要先把设计思路先告诉你，让你确认。这个事情很重要，就是尽量用自然语言先沟通清楚需求，再让他开始写代码。然后第二个觉得很重要的一点就是说如果一个东西他做了三遍改了三遍，改不对就不要让他再试了，没用了就回退。就是有一个很好用的功能，我那个tree里面也有。回退到三步之前，然后换一种思路给他的输入，或者给他一个新的文档参考，帮他找个giu b开源的参考让他来试，不要让他在那个地方一直一直打转。",
      "speaker": "发言人3"
    },
    {
      "time": "00:50:14",
      "text": "对，除了像是做代码补全，做代码生成AI编程工具，它还有什么样的功能？就是在实际的应用开发里面。",
      "speaker": "发言人2"
    },
    {
      "time": "00:50:24",
      "text": "志刚他他在做运维的方面也一样很有帮助了。你就看就程序员经常打开一个黑底白字的那样窗口终端窗口，那里面执行各种命，其实用AI编程的这些模型去完成那些命令的生成等等，这个也能带来很多很多的帮助。现在AI编程也在很大的程度上开始往往前走，就像那个V0，boat new这样的产品，他们都是直接设计界面，就是界面和代码一体化的给你全都给你搞定了。所以他就已经开始从代码向往前面设计这种层面去走好了，这都是他现在能够完成的事情。",
      "speaker": "发言人4"
    },
    {
      "time": "00:51:02",
      "text": "评论区有人说代码小白，用这个做点自动化的东西还行，就比如说指望这个做5子棋to do list，就比如说刚才orange说给他老婆做的那个吃什么大转盘之类的，这个以外可能都很难，那小白不也得有一个学习的过程，先这肯定是一个先易后难。",
      "speaker": "发言人2"
    },
    {
      "time": "00:51:21",
      "text": "其实我是觉得AI是把这个变成独立开发者这个圈子里面比较流行的一个概念。就一人公司这个做法能够落实的更好了。就包括像吉梦，今年他的那个中文海报的生成能力也很强。其实你可以你一个人也可以把你的产品的宣发能力也搞定。所以前你可能还要去找那个外包，找设计师，对吧？现在你也可以自己来做做海报。",
      "speaker": "发言人1"
    },
    {
      "time": "00:51:44",
      "text": "有人说除了这个还能干嘛？写excel红，这个很舒服了。那就是今天的这些工具，它是直接用就行了。我们往后面看啊，还是需要再去先学一些专门的支持。比如说你要去AI编程，从入门到精通，然后再成长为专业的程序员。就比如说志刚老师你预判就比如说对于这块是一个未来可能是什么样的进化。",
      "speaker": "发言人2"
    },
    {
      "time": "00:52:11",
      "text": "这个问题我还真的和不少人去讨论过。因因为我我的本行其实就是教程序员的。我在大学的时候就是教C语言这门课，然后我现在我很多之前大学里的导师，现在一辈子都在教C语言，到现在还在教C语言。",
      "speaker": "发言人4"
    },
    {
      "time": "00:52:27",
      "text": "我和他们去探讨这个事情的时候，我会发现了一个很有意思的一个现象。就是他们非常比较抗拒把AI编程这件事情纳入到教学的体系里来会非常的抗拒。包括有很多比较厉害的程序员，跟他们交流的时候，大家都会认为说我现在技术这么高超。是因为我自己亲手写代码，几万几十万行写到现在我这么厉害的。所以未来如果还需要像我这么厉害的专业的程序员的话，他还是得走这样的一条路。这是一种观点。",
      "speaker": "发言人4"
    },
    {
      "time": "00:53:08",
      "text": "我其实持有的是另外的一个不同的一个观点。我觉得我们任何人不能够拿到自己的成长的路线，然后就锚定说后面未来所有的人都得是这么去成长。我们姑且不论说那种高级的程序员是不是还需要了，如果还需要的话，我现在的感受是这样，AI编程是一个方面，AI绘画成就AI的各个方面的来说，想要能够和AI在一起共存的非常好，充分的利用他的人，他最典型的特点应该是他具备这个领域里面最厉害的常识性的认知，或者说最厉害的审美。他未必是动手能力最强的那个人。",
      "speaker": "发言人4"
    },
    {
      "time": "00:53:51",
      "text": "举一个典型例子，就像罗永浩，他的审美是很厉害的，但是他一定不会画画，他不会搞设计。但他那个设计的审美是非常厉害的。所以AI的这个时代就是需要很多像罗永浩这种脑子思考很行，手不行，就是眼高手低的这样的人。",
      "speaker": "发言人4"
    },
    {
      "time": "00:54:10",
      "text": "那那把这个问题收窄下来的话，到了这个编程这个领域里面，我觉得后面以后需要更多的人是对用户有洞察，对需求有洞察，对市场有洞察力。然后能产生一个完整的一个想法，有价值的想法。至于这个代码实现的怎么样，这件事情他应该比以前相对来说越来越不重要了。为什么这么讲呢？因为刚才就说到了，大量的是常委的需求，只用一次的或者只是自己用的，这样的代码的质量不那么重要，这是第一。",
      "speaker": "发言人4"
    },
    {
      "time": "00:54:43",
      "text": "然后第二，作为一个软件工程师，我一直有一个强的一个惯性。就是说因为从开始学软件工程的时候，老师教的就是你这个代码的可维护性必须要好。你要不让你这个代码是基于一个假设，他后面是要能被几百上千甚至上亿次去使用运行，它仍然不出问题的。是奔着这样的一个角度去做的。这个是以前的传统的软件工程，软件开发者这个培养体系里面的一种要求。但是往后这个已经说了，这个代码本身它可能就不是要长时间维护的了。所以这些能力的需要它就会降低了。到了那种如果还有需要长时间维护的代码，这样的一定会有那个领域里面他需要的工程师是不是就是传统那样子的呢？我觉得可能也会发生变化。这个变化一个原因是人的懒惰的本性使然，我觉得当有了AI之后，人会自然而然的走向了AI就是搞手搓这件事儿的人会越来越少，这是一个天然的趋势，你找不到这样的人了。",
      "speaker": "发言人4"
    },
    {
      "time": "00:55:49",
      "text": "而第二个角度来说的话，我们可以通过其他的方式去保障这个代码，这个软件的质量。比如说前面去讲到AI编程还能干什么？有件事没讲，就AI编程他其实自己去做自己写出的代码的测试，这件事情也很厉害。然后这件事情把它做的更好了之后，我们是可以通过外部的手段，通过测试的手段去保障这个软件产品的质量。这个时候你本身你是不是人对它做了很好的管控，让它质量高，重要性就也没那么重要了。所以我整个的核心观点是认为，我觉得现在如果再去学编程的话，哪怕目标是将来成为一个专业的程序员，也是一定要和AI第一天开始就和AI结对，从一起方式去往前走，这样是更应该的未来的方式。",
      "speaker": "发言人4"
    },
    {
      "time": "00:56:43",
      "text": "你看你也说跟I是结对，不过这个结对他也分，他是什么关系？刚才我们一开始聊了那个cosplay跟auto products对吧？就是他到底是副驾驶还是一个伙伴？就是之前这AI coding，你看所有人都会聊，这个会不会取代程序员？我我们我先不聊这种问题，肯定很长时间不会。对，就是专业的人，他的专业的技能肯定有他这个存在。但问题是也会有人讨论程序员跟这个AI谁写的代码这类的问题。但是是不是像脆然后像cos r这一类的产品，它其实就是在我刚才说了，他们的产品理念就是在寻找这个开发者跟AR固定之间的平衡。Orange譬如说翠，你在使用的过程里面，你对他感受是一个是医生，是一个副驾驶，还是一个。就比如说你的一个工作伙伴，你自己是一个什么样的感受？",
      "speaker": "发言人2"
    },
    {
      "time": "00:57:39",
      "text": "我觉得会把它当成我的程序员的朋友，就肯定不是副驾驶，对于我来说肯定不是附加对于我来说，有点像那个自动驾驶。对，应该就是自动驾驶L三差不多L3L4了。因为他有两个模式，现在两个模式，一个是他写完代码确认，另一个模式是他自己改代码，你只要接受就行了。我一般都用第二个模式，就是他自己改改完之后我点个accept就可以了。我因为全托管模式和半托管模式。对对对，包括还有那个自动化，那个叫David，五百美金一个月，那个那个就更厉害。就是他都不用在你这儿写，他是在后台，它有个虚拟的环境。那写写完之后就是你完成任务了，就给告诉你完成任务。",
      "speaker": "发言人3"
    },
    {
      "time": "00:58:25",
      "text": "那谁是谁的实习生？谁给谁付钱？",
      "speaker": "发言人2"
    },
    {
      "time": "00:58:29",
      "text": "不是我想问个问题，插个问题，你在用的过程当中，你会有这种情况，就是说他写出的代码，然后你好奇这段代码到底干嘛，或者他为什么好用，你有尝试过问他来帮帮你解释这段代码。",
      "speaker": "发言人4"
    },
    {
      "time": "00:58:45",
      "text": "没有，完全是这样的。但是是这样，他因为我这我让他写写完之后会告诉我，他干了啥，这个我是看到的，但是为什么好用或者什么，我我先我先不管了。还有每当他尝试了很多次把一个东西做完了，做成了，我会立刻停停下来不往前走。然后让他把reit me更新一下，他干了啥还是要记下来，为以后他去改还是有帮助的。",
      "speaker": "发言人3"
    },
    {
      "time": "00:59:13",
      "text": "其实刚才我讲他做出一些小的应用的例子，我就想起我一个朋友，也是创投这个行当的。他想做一个跟心理健康相关的这种APP，然后找了知名团队的离职的外包团队，在他们的创业同时接点外包，已经做了大半年，这个产品还没有做出来。然后我记得我上周末去深圳，我参加斗邦马斯克的黑客马拉松。我看到一个高中二年级的，应该是香港某个中学的，高中二年级的学生，对，就在一个马拉松期间就一个人搞出了这个心理产品。因为那个比赛大部分的产品都是通过他们马斯克那个编程助手搞出来的。对我就把那个链接发给他，然后他就给回一堆的黑线。我就是感觉当真的大家有这个，那当然那个确实是就更高维了一些。还是我们刚才聊的，从插件再到这个IDE这种产品的。我说的点就是说就跟刚才程序员太贵，或者说人人有很多需求跟创意。",
      "speaker": "发言人2"
    },
    {
      "time": "01:00:17",
      "text": "我在那个会场上我还发现好几个挺挺有意思的项目。就比如说那种专门给我们这些播客的主播做那种全流程的。从你的去口P这种剪辑到你的写作note，然后再到你到后面给做切片，给顾客做切片，然后帮你这个切片视频化，然后再去哪个平台分发。所以我跟他说就是这种产品，这种有这种大的内容平台的产品，大概率这种剪辑工具就类似于剪映跟抖音这种关系，他平台都会自己做的，这种可能用的人不会那么多。但是这些产品真的之前没有人这么完整的像他那样给大家提供过，但是而且产品完程度非常高。",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:01",
      "text": "我还碰到两个大学生，两个大学生做一个产品，我也觉得好有意思。我就是在在那个场合里面，我当时就我就应该是给了最高峰两个大学生就用那种比如说一千个单词。因为那几天就是不是有七个talk相关的巡游，七个套难民涌入小红书这一类的。他们让人在1000个最简单的单词里面去调整，让你去听得懂他的英语播报的新闻，就给你生成在那一千个单词词汇量里面。这两个大学生做出来的哟。",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:33",
      "text": "然后我要碰到还有非常有意思，我就碰到几个女生就是做童装的，他们竟然做了一个从儿童的智能衣橱，就是通过温度这个视角，小孩都是怕她冷不冷？怕他冷。比如说今天有多少度，然后应该穿多什么样厚度的衣服，然后怎么样搭配。就类似于这种，我觉得这种解题都好巧妙，这些能力都是AI之后才有的。",
      "speaker": "发言人2"
    },
    {
      "time": "01:01:59",
      "text": "我就跟他说，我经常举例子来说，你今天就打开天猫，打开淘宝，各个产品你去搜一下。比如说像我们这种比较胖的人，就是喜欢穿黑衣服，去搜那种说一个黑色的不粘毛毛的那种T恤衫，卫一其实都搜不到的。而且天猫像不管是阿里的AI团队还是天猫团队，他们大概率不会去从这个小的角度，那其实是应该是他们干的。但没想到是几个完全外行的人，也不能说外行，就产业链里面的一环的人就干出了这种产品。我觉得真的是这种对人的解放也好，或者说那种真的个性化。",
      "speaker": "发言人2"
    },
    {
      "time": "01:02:37",
      "text": "这情况其实蛮好的。而且它正常来讲，我觉得人类的社会进化应该是往这个角度去走的。就是以前大家觉得做一个软件，这一定是软件工程师的活。这个时候提高了他的门槛，也提高了它的成本。其实这个里面成本有一个成本很关键的。它不仅仅是程序员的工资，它还有一个很大的一层成本的浪费，甚至永远不能解决的就是程序员你怎么去理解这个业务，理解这个用户的本身的需求。这个过程当中消耗了大量的时间和成本，甚至有有的那种钩就是翻不过去，程序就是理解不了。但现在没了这个过程了，直接需求方自己非常知道这个需求怎么回事，然后马上就直接接着AI把这个来完成了，那这个就一定是最爽的了。",
      "speaker": "发言人4"
    },
    {
      "time": "01:03:28",
      "text": "OK评论区有人问孙老师，AI coding出现之后，这些企业的终局是实现人人自然语言的编程，还是彻底改变学习编程的方式，我觉得就是这个问题，它在很长时间内可能都未必是一个真的问题。我就感觉这种AI的使用门槛，它其实也挺高的。你要用的好的话，其实是一个输入输出，我理解，其实一个IO系统，它其实是需要你的一个很高质量的输入，然后你的输出质量才会更高。",
      "speaker": "发言人2"
    },
    {
      "time": "01:03:58",
      "text": "所以说用好AI关键是得有老板思维，老板擅长激发下属，给出一个好的输入，然后把下属的这个能力激发出来，他给出一个好的输出。",
      "speaker": "发言人4"
    },
    {
      "time": "01:04:10",
      "text": "所以肯定不是人人都能是程序员，对吧？人人都可以是AI程序员，人人来编程。他肯定是那些孙老师说的那种更有老板思维的那种。",
      "speaker": "发言人2"
    },
    {
      "time": "01:04:19",
      "text": "我觉得主要还是有一个学习能力的一个加持。你像孙老师以前在学校任教，我也看到很多那种想当工程师的，学生会认为现在大学的教材严重落后，这是一个普遍的一个问题，就是技术发展日新月异，但是你大学的教材没有那么快的。但其实它能够AI变成它能够很好的去把人的学习的效果，把它很很容易捡起来。",
      "speaker": "发言人1"
    },
    {
      "time": "01:04:43",
      "text": "你可能在大学里面没有学到好的东西，但是你借助PI编程，你可以很好的去赋予你的新的方向一个技能。比如说你像移动互联网起来的那一波，其实很多公司的程序员他都是现学的。就是怎么去IOS里面去做，怎么去做安装，都是现学的。拿本书，就我们当时我那当时在在电报时候，其实也有这种东西。老板说要做个什么东西，他不会，然后先拿本书看一个礼拜，一个礼拜之后OK开始做了，但现在可能说不要一个礼拜了。只要你有这个学习欲望，可以学习能力，你就能够很快的去上手，至少把这个东西跑起来，然后一边学一边走。我觉得这其实对于很多做事的人，就是有业务的人，业务端其实是一个很好的一个注意效率的一个提升。",
      "speaker": "发言人1"
    },
    {
      "time": "01:05:21",
      "text": "对这一块就是需要使用者他有系统性思维，如果你是点状的表达，AI也爱慕能助。这一趴我们在聊这个AI跟程序员，然后跟人的关系。这一趴我们下面再回来再辽一趴行当，就是在聊这个AI编程这个行业。对，我们发现国内其实大厂也都纷纷涌入这个赛道。不管是阿里的通义灵码，百度的文心快马。然后我听说快手也进来，对，快手也做to b的这类的产品。创业公司里面像智慧AI硅心科技，然后这个星原一码也同样都很活跃。但如果回到就刚才那个我们一开始定义的那个像副驾驶跟这个有点偏向自动驾驶的那种的。如果是这个对比的话，就是前面是插件，后面是在IDE里面做那个产品。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:11",
      "text": "我往回推，我其实并不是特别懂AI编程这一块。但是我看之前我在AI其实在一年之前，大家用的最多的在讲应用的那个时候，其实他们非常多都在浏览器里面去做各种的件。浏览器这根电线杆里面塞满了各种的插件，就是填满了各种的小广告，然后各种的应用都去做这个插件。但是后来在在今天我们看到的可能是像豆包，像夸克这个PC产品，就直接是一个AI浏览器的一个形态。就把之前电线杆里面上面的那些你去做那个画词，你去做AI搜索AI创作AI总结写summary，就各种的插件都集成到我自己的产品里面了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:06:57",
      "text": "我另外还想到一个例子，就是2020年卡拉house就特别火，就是现象级的，很多人都涌进去。但是你像这种多人现场的这个音频连麦这个功能，大家今天其实不记得卡拉的house，大家就是会在spotify，然后在discount，在twitter space里面看到这一类的产品。在国内其实也有，我觉得老想起就是可能是十年前像印刻它也特别火。但后来大家今天看直播是在这个视频号的直播间，是在抖音，是在快手。我就感觉这些是不是我说插件它其实是一个功能，它不是一个产品，就是这种的创新，它其实特别容易变成其他大产品里面的一个功能。我是不是表达的有点累赘。",
      "speaker": "发言人2"
    },
    {
      "time": "01:07:41",
      "text": "我听明白了。",
      "speaker": "发言人4"
    },
    {
      "time": "01:07:43",
      "text": "问题就是像这他这种在IDE这个形态是不是就会比就因为你比如说你可以直接在去看它的那个预览，去看它的前端效果，就是跟那种如果跟之前那种插件去比的话，是不是一个更深维的一个过程。因为之前我们刚才聊到，可能之前的AI编程产品，它形态更多是这个AI插件。然后今天是不是往后面要到这个AIADE的这个形态了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:08:12",
      "text": "往下面走其实可以做的事情会很多很多。他现在其实是还是基于代码在做，他其实还没有很多模板。这样东西在里面就有有有一种可能性是说变成一个剪映。剪映本质上来说它具有很多这种剪辑工具的基本功能。但它里面有很多给小白用的功能，比如说这种AI的数字人这种功能。AB上也类似，它有可能内置很多比如说中国人喜欢的小程序。小程序的配置你就可以稍微改点东西就上线了。这个就是它的竞争力，它会比插件要scope要大很多。",
      "speaker": "发言人3"
    },
    {
      "time": "01:08:45",
      "text": "实际上就是传统的IDE，它肯定会开始向AIID的角度去演化的这这这是一个必然的一个趋势。但是就算是新的ID cursor等等的，它其实本身也支持插件。但这个搭建能力是完全从那个YS code继承过来的，它不是一个非此即彼的，他们其实会是一个互相融合的一个过程。",
      "speaker": "发言人4"
    },
    {
      "time": "01:09:08",
      "text": "我看评论区有人说这就像dota一跟dota 2的区别一样。就是说插件是副驾驶IDE更偏向自动驾驶，就是能帮助大家做的更多更彻底。如果我们就回到国内，就比如说各家大厂做的这些产品，比如就刚才聊到的阿姨做通义灵码，然后百度做commit，然后商汤的代码小浣熊，包括字节今天在海外推出的这个脆。就他们在不管是这个技术路线、功能、定位上，他有有啥不一样吗？或者说各自能够察觉到有各自有什么不同的侧重点吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:09:46",
      "text": "其实除了这以外，其他的同质化都很严重。因为他们都是定位的，完全就是一个插件，然后基本都是复制的去copy t，然后功能上也没有什么独特的特点，但背后的模型能力确实是有差别，这是他们的核心差距。但这是一个就不一样了，它是完全重新从IDE这个核内核的层面上去做了一个魔改的升级。这就是它带来完全不一样这么一个角度。",
      "speaker": "发言人4"
    },
    {
      "time": "01:10:15",
      "text": "它的用户群其实像comment、灵码，他们在B端卖的就比较好。他们其实还是比较针对这种程序员，针对企业就是这种我觉得它的稳定性要求会比较高，他们迭代上就很慢，包括可拍的也很慢，有三年了，其实你看功能上没啥地带，但是这个tree和curse它就不一样了。比如说windows最近的公布了他们的vivo 2V52，最大的feature是可以自动的查询网页。就是他遇到问题的时候，这个模型解决不了，你也解决不了。他自己去github去搜一些东西自己解决。这个就是一个新的feature，已经在朝着一个新的形态在走的去。我觉得未来也是这样，就是它会让这个东西不再说依赖，说程序员有需求，程序员已经很专业了。而是说小白用户有哪些需要我就做什么，朝这个方向走，就更to c一些。",
      "speaker": "发言人3"
    },
    {
      "time": "01:11:09",
      "text": "那就涉及到我们刚才聊的一个没聊完的一个问题，那就往后面大家拼什么呢？就是这类产品它看起来也没有特别强的一个壁垒，然后其实都是模型能力的溢出，对吧？就比如说cos大家其实也都是那个cloud。对，cloud就是当它3.5之后，他不再更新的时候，他好像也有一段时间，就比如说已经不在那个风口浪尖上了，或者这么说，我我我说一个更容易理解的问题。我说就比如AI编程这个市场，它以后会不会就像这个boot市场一样。就像你像之前大模型各家公司也都做聊天机器人，然后不管是kimi，然后这个文馨一言，现在叫文小，然后各家公司都有啊政府新年各种东西。但今天我们看到的一个结果其实是豆包一骑绝尘。",
      "speaker": "发言人2"
    },
    {
      "time": "01:11:58",
      "text": "然后我说这个东西AI应用，它在就刚才也提到它的应用层可能大家做的比较薄。然后如果模型能力越强的话，那它需要应用做的事情越少。到后面我说那个市场竞争的到底是什么？它是技术吗？模型可能就没有特别大的差别。然后那是不是就是刚才孙老师说的要去看这个用户心智，用户心智今天看的确是多报一骑绝尘。你看看人家的那个C端产品体验的能力，看看他触达用户的渠道和获取用户的能力。",
      "speaker": "发言人2"
    },
    {
      "time": "01:12:32",
      "text": "我有个不太一样的看法，就是AI编程它其实一个强交付的一个产品，就是你做的好不好，你出来的活到底好不好，你可以直接由由工程师，由由你的使用者自己去鉴定。有他是有个客观的一个结果的判断的，但是聊天技术人他其实没有，就我们在我我在抖音上其实看到很多对比，比如说让chat GP和抖音互相去辩论，然后看哪个好。但是基于这种个人的经验，他都都是一个抽象和模糊的，甚至说是一个主观的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:02",
      "text": "你很难说我跟哪个机器人聊天技能聊的是质量最好的，就尤其是聊的东西特别的文科化的情况下，对吧？你们聊聊天去聊情感这个东西其实你很难对比。但是编程它有一个不一样的地方，就是它的交付的东西能够直接去做对比。所以只要有哪一个AI编程的产品，不管它在ID的模式还是哪个模式，它在交付上的效率和质量做的更好。那大家一定会往上面去，一定会迁移过去。而且它没有什么网络效应。",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:30",
      "text": "我觉得聊天机器人虽然也没有网络效应，但是它至少掌握了你的很多历史数据。如果未来我们能够实现这种千人千面的AI的话，那你的聊天机器人是有网络效应的。但是编程这个东西我觉得很难有网络效应。它其实比的就是谁聪明，谁出来的活最好。那大家就愿意去每个月交20美元或者500美元。我觉得这个交付是一个非常一个大的一个亮点一个特点。",
      "speaker": "发言人1"
    },
    {
      "time": "01:13:52",
      "text": "这个倒确实是因为A临床的工具切换的成本是非常低的。然后程序员从来也没有在意什么，没有什么中车主感情的羁绊，对程序员都不讲感情的。其实确实说切就切了，因为你看很多人从copd切到coco就是一夜之间的事情。听说那个更好用，大家都说更好用，试试试试，果然更好用。Copilot一月收十美元，咳嗽一月收20美元。大家有咳嗽。",
      "speaker": "发言人4"
    },
    {
      "time": "01:14:22",
      "text": "翠免费。然后大家到期之后我又转过来。",
      "speaker": "发言人2"
    },
    {
      "time": "01:14:26",
      "text": "对，现在很多人已经瞄着，就等着到期了，就准备转过去了看看试试看。但如果他又不够好用的话，就是达不到咳嗽的那种水平。那可能就是算了，还是回到咳嗽。因为就这个钱花的值20美元，其实不算多少。对，但是画完之后，你整个工作过程的那种舒爽，是难以言表的这就是你你你有秘书没秘书的区别，秘书听话和不听话的区别。",
      "speaker": "发言人4"
    },
    {
      "time": "01:14:50",
      "text": "OK刚才有人说了，他那个dota一跟dota一的差别指的是什么？指的就是传统IDE的插件，还是在补全代码那个层面，主要是智能补AIIDE的交互创新比较彻底，也充分的发挥了大模型的编码能力。是的，真的是cloud 3.5之后，那个上下文一瞬间就是这波AI编程全部都来了。在今天我们来看的话，就比如说AI编程这个赛道，还有谁在做不同方向的探索吗？可以是大厂，可以是创业公司。二人觉得你身边有谁在做不同方向吗？",
      "speaker": "发言人2"
    },
    {
      "time": "01:15:25",
      "text": "我觉得这个事情有点像设计工具，就是设计工具。最早的时候大家可能用photoshop这种照片类的，后来是action、sketch这种。后来大家都开始用西格玛，但这gma其实不是最赚钱的。那个最赚钱的其实是可画，因为可画更大众一些。",
      "speaker": "发言人3"
    },
    {
      "time": "01:15:44",
      "text": "所以现在我一个朋友他在做那个就是只给非程序员用的编程工具，就是代码完全就不给你看就给你看。结果就是他把很多接口后端都做好了，AI能力什么open API都接好。就是让你直接做小东西，做完之后可以发在他们网站上作为模板，也可以发给你的朋友。他有点像一个说我今天能用半小时做了一小程序，但是国外因为没有限制，小程序可以发任何地方。就成你的一个作品。中间甚至连代码都是隐藏的，就变成了一个新的一种创作。创作的是一个网站，不是一个视频，这点会有点不太一样，我所以然后我就联想到可画这个市场规模，就是maybe退这个市场现在都不是最大的。",
      "speaker": "发言人3"
    },
    {
      "time": "01:16:31",
      "text": "因为零基础的人去用IP创造这件事情，这个增量市场是非常大的。程序员你想一共才多少人？还是少。",
      "speaker": "发言人3"
    },
    {
      "time": "01:16:39",
      "text": "8000万到9000万。所以就是一开始聊到那个问题。对，大家可能是想要编程的人可能有几个亿。",
      "speaker": "发言人2"
    },
    {
      "time": "01:16:47",
      "text": "不过就这样的话，其实在专业的程序员在市场里面，现在还有好多好多在整个工作流当中很窄的环节里面的一些AI编程的工具现在都在做。而且他们不少都是能赚到钱的，活的也挺好的，做不到太大。但是在那个细分市场做的也很好的。比如帮着做code review的，帮着这个做测试的，然后帮着去比如说做代码的这种安全性检查的。",
      "speaker": "发言人4"
    },
    {
      "time": "01:17:12",
      "text": "我我我还有一个朋友，他做了一个很有意思的一件事儿是什么呢？他是专门做这个。如果你是拿来的别人的一堆代码，他用AI帮你去读懂别人这堆代码是怎么回事儿，是干嘛的，他怎么实现的，是干这件事儿的。他就适合说你新到一家公司去接手一个新的项目，用这种方式比你自己去读代码高效的高。然后还有一些老板CTO也用这个东西，用这个东西来看自己的员工干的活干的怎么样。有没有糊弄我？对，他是专门干这种场景的，其实他们都都活的挺好的。",
      "speaker": "发言人4"
    },
    {
      "time": "01:17:48",
      "text": "我讲过我讲个段子可能也不是段子，可能好像是一个有个真实的故事。就知乎上之前有个程序员，他说他给公司制造开除他的障碍的一个手段，就是把代码的维护写的只有他自己能懂，就加很多他自己的规则进去。然后你公司开了之后，接手他的人就很难去继续的这个维护工作，然后公司就不太好开。但其实有AI之后。",
      "speaker": "发言人1"
    },
    {
      "time": "01:18:11",
      "text": "这个东西就容易解决了一点。OK. 我想一个问题说说，我就如果像翠这样的产品，它更加的普及为更多有老板思维的人用。然后其实宋老师说的老板思维是让他以一个更好的合作伙伴的方式跟AI相处。那他对未来他会发生什么样的变化呢？我自己先说，我就真的感觉是那种想象力的3D影机的那种的感受。他就会让就比如说orange刚才提的那种，我回头我如果他们报这个班，我也也得去学一下，就体验那种发明和创造的那种快乐。就是这种创造你自己去去建个网站，写个小程序，他跟我生成一个图片，生成一个视频，那就跟我早年我们去自己辛辛苦苦去搭个独立和一样，那个成就感跟写篇稿子完全不一样的。有一瞬间就觉得你自己造物主的那种的感受。",
      "speaker": "发言人2"
    },
    {
      "time": "01:19:07",
      "text": "对，那个课线下我们那个课当时去了大概十个人，让我很意外的就是一半是女生，程序员默认男性比较多，那你一半都是女生。而且他们在玩的时候，真的有很多暗时刻，他们会真的惊呼牛逼做出来了，就是非常激动。然后其实我们我们现在这个节点cloud 3.5这个模型其实是半年前的东西了。最近我在玩那个OE pro，还有那个google think，我觉得是已经是next level了。但是这种模型现在还没有被放到consider，没有被放到这里面，我估计可能很快了。这类模型我觉得会把我们现在包括O3马上出了，O3可能一两个月出了，O3的水平是O一的三倍。到时候我觉得这个车也好，能干的事儿会变得超出我们的想象。",
      "speaker": "发言人3"
    },
    {
      "time": "01:20:02",
      "text": "对，最近其实很火的是deep sik加client这个组合。Client是个插件，它支持所有的开源的模型。然后现在就是在MIT美国那边大学，他们已经全都用dipstick。这玩意儿也是一个方向，就是推理模型加到这个编程里面来。",
      "speaker": "发言人3"
    },
    {
      "time": "01:20:21",
      "text": "OPI刚刚宣布说O3 mini要免费，所以即将免费。然后推文底下全部是感谢deep sik的对对吧？就是这个价格共识对大家还是有帮助的。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:32",
      "text": "OO为什么OE现在没有上呢？因为它太贵了，不是说这个能力贵了，它太贵了用不起。尤其是你要不断的试错，你要想真的想不断的向他提需求的话，这个成本推进成本其实蛮贵的。所以还是需要更多的一个价格突破出来，把价格往下砍一砍，这样他大家才用得起。",
      "speaker": "发言人1"
    },
    {
      "time": "01:20:49",
      "text": "对，而且O1 pro真的太慢了。O1 pro每次回答问题三分钟，每次我都是忘了。然后就在google goole think那个很快goosing那个就是十几秒，所以空间还是很大。",
      "speaker": "发言人3"
    },
    {
      "time": "01:21:00",
      "text": "对，像孙老师其实说的那个老板思维，其实我我就总结成六个字，就看市场提需求。看市场只是你要看消费者这些东西想要什么体系，尤其是说你像生产端，你像AI你就说让他做出个什么东西出来，其实中间的这个能力，他其实是AI很难去取代的。其实有很多人他会通过AI去去找需求。比如说我要做个什么东西，你帮我研究一下这个是有没有市场。但是这个时候你会发现AI提出的这个创意或者洞察其实都很粗浅。他其实没有办法去理解复杂的人性。但在前后两端，你做东西和和那个那个上面他也是很强的。所以人其实人的优势其实还是把握我们人的长处，把住人能做什么，这个其实AI.",
      "speaker": "发言人1"
    },
    {
      "time": "01:21:42",
      "text": "难以取代的对，一个就是老板思维，就指挥AI干事儿，一个就是把个人品牌做好，自媒体做好。莹莹为你推广的话还是要对吧？还是要告诉媒体，这就是大马尔说的两个杠杆，媒体和代码就是今未来一定是一个艺人公司，然后超级个体时代。代码和自媒体都做好的话，你其实你也不用去上班了，真的不用去了。",
      "speaker": "发言人3"
    },
    {
      "time": "01:22:06",
      "text": "那我们自媒体老师先努力去学学这种AI编程，去学学这种的代码。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:15",
      "text": "其实其实我真的建议去学一下，还挺好玩的。它其实比wordpress简单，就是成就感还挺高的。",
      "speaker": "发言人3"
    },
    {
      "time": "01:22:22",
      "text": "一下午了吗？我十几年前0几年折腾过我的part了。",
      "speaker": "发言人2"
    },
    {
      "time": "01:22:27",
      "text": "那没啥问题，其实他比cos简单。那天我们那个现场有cos那部分的时候就卡住了一个人，不知道说这个变量是啥意思什么的，就卡住了。",
      "speaker": "发言人3"
    },
    {
      "time": "01:22:38",
      "text": "但是在编程的时候，还是一个面对有有编程基础的人去，因为他有很多的交互其实都是这样来的，就你普通人很难去理解它。",
      "speaker": "发言人1"
    },
    {
      "time": "01:22:47",
      "text": "对对对，它其实是给很专业的这种思维设计的。而且另一个卡点是部署到那个cloud flare的时候，就是域名，这些大家都不懂，就是我们可能都都懂，他们那小女生都不懂域名，什么那个worker什么的，然后AI帮帮忙。",
      "speaker": "发言人3"
    },
    {
      "time": "01:23:04",
      "text": "其实英文朗读也说，现在整个的IT的基础设施在以前设计的时候都还是面向程序员的，都不足够友好。是其实整个基础设施是都值得再重新的包装抽象一下，让它面向AI编程更友好的这种方式去提供出来。",
      "speaker": "发言人4"
    },
    {
      "time": "01:23:21",
      "text": "是你也许网站会复兴，没准就是人人都可以做一个网站了。",
      "speaker": "发言人3"
    },
    {
      "time": "01:23:26",
      "text": "现在对独立站有时候不行。回回老师你在0几年的时候做个人主页，那个时候真的是四个人都想上去尝试一波，然后各种特效flash.",
      "speaker": "发言人1"
    },
    {
      "time": "01:23:36",
      "text": "特效上拉满。对对对，flash时代。对对我在极客。",
      "speaker": "发言人3"
    },
    {
      "time": "01:23:41",
      "text": "里面看到，就比如说有人用这些AI编程工具，我忘了是不是黄叔还是谁，他说做了一个红布，两个平台可能同步即刻同步flow mal就是一起发表的这样的一个东西。可能也在包括微博，你知道我看到的消息那一瞬间特别黄。我就是0809年就是中国微博客特别火的时候，有像饭否了。对，像什么低估了，然后像那个就是好多然后好多的这种类微博产品，那时候没有微博这个名字，叫类推的产品。对，微博那时候没出来，然后也有人开发了一个插件叫那个follow 5，就是类似于世界大同的意思。",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:21",
      "text": "我用过对我都用过我都用过。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:24",
      "text": "对，就是可以让你的同时各个平台同步推他了，同步人人网的那个状态，然后同步饭否，甚至同步豆瓣。我忘了豆瓣可以不可以同步，就类似于这种，我操这种产品今天又有人重新做一遍。",
      "speaker": "发言人2"
    },
    {
      "time": "01:24:37",
      "text": "我就感觉因为成本太门槛太低了。这个东西它没有经济价值，但是他有个人的，我如果能够顺手一做，它就能够出来了。对。",
      "speaker": "发言人1"
    },
    {
      "time": "01:24:46",
      "text": "产品的大爆发。对对对，已经没有经济价值了，但是个人价值还是有的。",
      "speaker": "发言人3"
    },
    {
      "time": "01:24:51",
      "text": "这就不是我们今天聊I编程，就是更多的为个人所用。然后我觉得很多的之前消失的那些东西，就因为其实过去移动互联网时代的创业，到最后大家都变成了我先看看市场有多大那种，你看所有人的BP写的第一页都是这个市场有多大。包括我们今天在讨论AI变成这个事情本身，也是因为它是第一个真正盈利的AI赛道。但其实真正使用，就早年的互联网可不是这样的对吧？大家真的是想要解决我的问题，对，不是解决这个大市场的问题。OK我们就是希望古典复兴，或者说长尾复兴。然后我真的觉得长轨会重新回来，在移动互联网销售的长尾会重新回来。",
      "speaker": "发言人2"
    },
    {
      "time": "01:25:36",
      "text": "这是一种大家富裕之后的一种追求，更上层的一种新的一个时代。",
      "speaker": "发言人3"
    },
    {
      "time": "01:25:42",
      "text": "判官说老需求值得重新做，而且的确是今天有脆这一类的产品，它会让成本低的非常多。对我一定会去学一下，然后怎么去重新体验一下创造的快乐。",
      "speaker": "发言人2"
    },
    {
      "time": "01:25:57",
      "text": "作为一个小网站，送外卖应该比送外卖该在。",
      "speaker": "发言人3"
    },
    {
      "time": "01:26:04",
      "text": "互联网时代会回来，历史总会重复。OK, 我们今天大概就先到这边。",
      "speaker": "发言人2"
    },
    {
      "time": "01:26:10",
      "text": "好的好呀好。",
      "speaker": "发言人3"
    },
    {
      "time": "01:26:12",
      "text": "行行，聊2个小时.",
      "speaker": "发言人2"
    },
    {
      "time": "01:26:15",
      "text": "拜拜世。但你的生活还是要继续。",
      "speaker": "发言人4"
    }
  ],
  "lab_info": {
    "summary": "本次讨论集中于AI编程工具的发展及其对编程方式、用户创造过程的改变。AI工具不仅让编程对非专业用户更具吸引力，简化了网站创建等过程，还通过代码理解和审查等功能提高了工作效率。讨论了AI在促进个人品牌建设方面的潜力以及对教育和职业培训的可能影响。展望未来，期待AI技术能降低成本、增强模型能力，使编程更加大众化和个性化。同时，具体介绍了支持多语言操作的AI编程工具和平台，如字节跳动的海外产品和Copilot等，这些工具如何优化工作流程和激发创造力。对话强调了AI编程工具需关注模型能力、用户体验和用户需求满足，以在竞争中脱颖而出。",
    "qa_pairs": [
      {
        "question": "orange，当你上周刚学会编程，这周字节跳动发布了AI编程工具，听到这个消息是什么感受？",
        "answer": "我当时第一感觉是感觉自己蹭了热点。实际上，我上周就已经约好课程，周六学到了晚上，并在第二天得知字节要上线一个AI编程工具，感觉自己的学习速度和产品的发布速度非常巧合。",
        "time": "00:02:20"
      },
      {
        "question": "你有使用这个AI编程工具吗？使用下来有什么感受？有哪些亮点功能？",
        "answer": "我用了一下，它的基本功能类似于VS code的Vserve和winter 5，虽然功能上可能稍少一些，但它的界面设计比一般的VS code套壳更好，对中文知识非常友好，相比其他工具在处理中文时更出色。",
        "time": "00:02:51"
      },
      {
        "question": "当可以使用自然语言编程后，AI编程产品是全球品牌一起竞争，还是需要针对不同地区、文化和语种进行本地化运营？",
        "answer": "对于程序员而言，语言如中文、英文在开发方面不是大问题。目前国外开发工具在支持小程序开发方面相对较弱，但只要技术、语言环境是世界性的，就没本质区别。不过，当AI化后的产品面向小白用户时，可能会有更多本地化需求，因为不同人群对于界面设计、付费习惯等会有差异，而这与本土文化和用户群体相关。",
        "time": "00:04:32"
      },
      {
        "question": "AI编程产品之间，如Copilot与Coffer等，它们之间的差别具体指什么？",
        "answer": "Copilot主要面向专业程序员，需要用户具备一定的编程能力，通过自然语言补全代码；而Coffer等产品则是面向非专业人士，用户可以用自然语言设计产品、解决bug或设计模块，降低了使用门槛，让更多非技术人员能够利用这些工具进行创新和开发。",
        "time": "00:10:01"
      },
      {
        "question": "AI编程对低代码行业的影响是什么？为什么低代码在AI编程出现后似乎没有之前那么受关注了？",
        "answer": "低代码通用性较差，解决真实业务问题的能力有限。而AI编程具有很高的通用性，降低了编程门槛，因此在某种程度上可以说是降维打击。AI编程帮助低代码平台通过AI自动完成串联细节，从而更好地满足宏观和微观需求，促使低代码与AI结合，实现更大的价值。",
        "time": "00:06:36"
      },
      {
        "question": "AI编程为何能在赛道中率先实现盈利，尤其是在其他领域还在探索阶段时？",
        "answer": "AI编程能够率先盈利主要有两方面原因。首先，AI编程赛道起步较早，比ChatGPT还早一年上线，拥有足够长的积累时间。其次，最关键的是AI模型在编程任务上的表现最为出色，能够轻松超越初级中级程序员，这是其他赛道难以比拟的。此外，AI编程产品的需求方和服务对象都是程序员，这对产品的理解和优化更为深入，有助于快速找到产品市场契合点（PMF），这也是其成功的一个重要原因。",
        "time": "00:16:00"
      },
      {
        "question": "AI编程是不是专门为工程师准备的垂直大模型？",
        "answer": "AI编程并非特指为工程师准备的垂直大模型，实际上大多数大模型都具备很强的编程能力，并通过训练提升推理能力。尽管存在专门针对某些领域的较小模型，但它们的编程能力并不一定比通用模型更强。所有大模型在训练过程中都会将编程视为重要的指标，并吸收编程代码作为训练数据，以增强模型的逻辑思维和编程能力。",
        "time": "00:19:04"
      },
      {
        "question": "为什么AI编程对工程师来说更可用？",
        "answer": "AI编程对工程师而言更可用是因为它可以满足许多原本无法被满足的小需求，通过生成各种实用工具或特效，如表情包制作等，极大地提升了工作效率和体验。即使对于专业程序员，AI编程也能帮助他们完成一些历史遗留代码的升级维护工作，从而提高工作效率10%至50%。",
        "time": "00:24:19"
      },
      {
        "question": "当前AI编程赛道有哪些当红炸子鸡及其不同之处？",
        "answer": "目前最火的是Bossnew，其前端功能强大，易于出成果，给新用户带来巨大震撼，但专业程序员可能更偏好Copilot这类工具。在用户量方面，Bossnew可能是第一名，但在营收上可能不如Copilot。每个工具都有各自的定位和优势，例如Copilot在内网程序员用户中有较高口碑，而Bossnew则更受新手和前端开发者欢迎。",
        "time": "00:25:43"
      },
      {
        "question": "在提供中文界面的产品中，是否可以说某个产品是最好的？",
        "answer": "不可以，因为其他产品可能没有提供中文界面或更流畅的一整套优化。",
        "time": "00:27:27"
      },
      {
        "question": "AI编程产品的护城河是什么？",
        "answer": "AI编程产品的护城河主要是用户心智和品牌认知，因为底层模型能力容易被复制，而品牌认知则需要通过早期推出、宣传和获得认可来建立。",
        "time": "00:28:32"
      },
      {
        "question": "AI模型能力的护城河是什么时候开始变化的？",
        "answer": "这个变化发生在3.5版本之后，尤其是3.5 cloud和3.5 snet版本，它们在各方面表现强大，尤其在编程方面。此外，像GPT这样的模型品牌性很强，OpenAI的地位有所动摇，但3.5版本的出现对市场产生了显著影响。",
        "time": "00:30:02"
      },
      {
        "question": "AI编程是否能解决特定场景下的个性化需求？AI编程在企业中使用时是否会取代工程师？",
        "answer": "AI编程可以有效解决诸如小猫补光灯这类产品所体现的个性化、临时性的需求，通过AI编程实现快速定制和满足个人用户的具体要求。AI编程目前无法完全取代工程师，它更多是作为一种工具辅助工作，提高效率，但实际编程和创新仍需人类智慧参与。",
        "time": "00:36:09"
      },
      {
        "question": "AI编程在企业落地时会带来哪些挑战？",
        "answer": "在企业落地时，AI编程会引发裁员风险，因为它能显著提高工作效率，导致人力成本降低，从而引发内部博弈。同时，对于知识工作者来说，AI编程可能会改变工作性质，从提升生产力转变为提供更多思考空间，这取决于企业管理层如何看待和处理这个问题。",
        "time": "00:36:57"
      },
      {
        "question": "在实际的开发过程中，AI编程与人工编程是如何更好地协作的？这种协作模式对职业开发者在开发效率和代码质量上有何影响？",
        "answer": "AI编程与人工编程之间的协作类似于配备实习生的情况。一开始，程序员可能不愿意与AI一起工作，但随着熟悉度增加，双方会进入一种高效协作状态。AI负责快速完成简单任务，程序员则根据实际情况灵活调配或自行解决复杂问题，总控权在程序员手中。AI编程如同副驾驶，辅助程序员工作，提升开发效率并降低繁琐工作。",
        "time": "00:42:43"
      },
      {
        "question": "在公司内部场景下，不具备IT能力的业务人员如何通过AI编程参与到优化业务流程中？",
        "answer": "例如，业务部门员工可以利用AI编程编写Python代码来处理大量文件，完成分类整理、重命名等任务，显著提高工作效率，减少繁琐工作，从而提升工作幸福感。以前这类工作需要求助IT部门，而现在则可通过AI编程自主完成。",
        "time": "00:44:37"
      },
      {
        "question": "在公司场景中，使用AI编程的角色会是什么样的？程序员的角色是否会因此弱化？",
        "answer": "AI编程的应用初期，好奇心重、喜欢探索新鲜事物的人会率先尝试并应用它来改变工作流程或提升能力，这并不局限于某个岗位或甲方乙方关系。随着AI应用普及度提高，更多人将不知不觉中使用AI编程，完成任务时可能并不直接呈现代码，而是以更易用的形式呈现结果。因此，程序员的角色可能经历从先锋探索到逐渐被广泛接受的过程，但同时也需适应更多非传统程序员角色的出现。",
        "time": "00:46:47"
      },
      {
        "question": "对于AI编程工具的实际应用，除了代码补全和生成外，还有哪些功能？",
        "answer": "AI编程工具在运维方面也有很大帮助，可以协助生成命令行指令等。部分工具还实现了界面和代码一体化的设计，进一步向前发展，尝试解决更复杂的设计和自动化需求。对于非专业程序员或独立开发者来说，AI编程能够更好地支持一人公司的模式，如海报生成、Excel处理等，使个体能够完成更多工作内容。",
        "time": "00:50:24"
      },
      {
        "question": "AI编程对未来程序员的学习路径和技能要求会有何变化？",
        "answer": "讨论中有人认为高级程序员仍需通过传统方式亲手编写大量代码来提升技能，但也有人持不同观点。AI编程将促使教育体系中更多地关注如何与AI共存并有效利用其优势，尤其是在常识认知、审美等方面。未来程序员可能更需要具备洞察用户、需求和市场的能力，而不仅仅是代码实现能力。AI编程可能会使一些“眼高手低”的人才（如罗永浩式人物）在编程领域崭露头角，因此对编程技能的要求可能会有所转变。",
        "time": "00:53:08"
      },
      {
        "question": "在AI技术的发展下，传统的软件工程对代码可维护性的要求是否还那么重要？在使用AI编程过程中，是否会遇到需要理解AI编写的代码逻辑的情况？",
        "answer": "随着AI技术的应用，人们对代码可维护性的要求可能会降低。因为未来代码可能不再需要长时间维护，而且有了AI后，程序员在编程时更倾向于使用AI辅助编写、测试和优化代码，从而减少人工对代码质量的直接管控。AI编程甚至能自动生成测试用例来保障软件质量。在实际使用AI编程时，虽然AI会告知用户它做了什么，但为何代码好用或如何实现某些功能可能需要用户自行探索。然而，一些AI工具允许用户要求其解释代码实现，以帮助用户更好地理解和改进代码。",
        "time": "00:54:43"
      },
      {
        "question": "学习编程时，是否应该一开始就与AI结合，并共同开发？",
        "answer": "是的，现在学习编程的目标者，尤其是将来希望成为专业程序员的，从一开始就应该与AI结伴同行，采用与AI协作的方式来学习和进步，这是未来编程教育和工作方式的一个重要转变。",
        "time": "00:55:49"
      },
      {
        "question": "AI在编程过程中扮演的角色是副驾驶还是工作伙伴？",
        "answer": "AI在编程中的角色因产品而异，它可以是程序员的朋友或工作伙伴，而非单纯的副驾驶。例如，某些AI编程工具提供写代码确认或自动修改代码的功能，用户可以将其视为协助编程的伙伴，而非简单的辅助工具。",
        "time": "00:57:39"
      },
      {
        "question": "AI编程出现后，企业的最终形态是实现人人自然语言编程，还是改变学习编程的方式？",
        "answer": "AI编程技术初期可能不会显著降低编程门槛，真正有效利用AI编程仍需要高质量的输入和输出，这要求使用者具备一定的学习能力和系统性思维。因此，AI更可能改变的是学习编程的方式，让不具备传统编程基础的人也能快速上手并发挥创意，而不是人人都成为专业的程序员。",
        "time": "01:03:28"
      },
      {
        "question": "AI编程行业的现状和发展趋势是怎样的？",
        "answer": "国内大厂如阿里、百度等纷纷进入AI编程赛道，推出了各自的AI编程产品或服务。从最初的AI插件形态逐渐过渡到集成AI功能的IDE形态，如AI浏览器，这些变化反映出AI编程正朝着更深层次、更集成化的方向发展。",
        "time": "01:05:21"
      },
      {
        "question": "在AI编程领域，同质化产品很多，它们之间的核心竞争力差异主要体现在哪些方面？",
        "answer": "这些产品的核心竞争力差异主要在于背后的模型能力，虽然表面上功能相似，但底层的模型能力各具特色，这是决定它们差异的关键因素。",
        "time": "01:09:46"
      },
      {
        "question": "AI编程市场未来是否会出现类似ChatGPT那样的领头羊，并且在市场竞争上比拼的主要是技术还是用户心智？",
        "answer": "AI编程市场在交付效果上的竞争尤为激烈，因为其成果可以直接由工程师或使用者进行客观评价。尽管模型能力可能趋于一致，但用户心智和产品体验成为重要竞争点，例如像ChatGPT那样的产品在C端市场的成功。",
        "time": "01:11:58"
      },
      {
        "question": "AI编程产品与聊天机器人在市场竞争上有什么不同之处？",
        "answer": "AI编程产品因其强交付属性，用户更关注其工作效率和质量，而聊天机器人虽然也有网络效应，但在用户心智层面存在主观性和模糊性。编程工具的成功与否主要取决于实际编程效果的好坏，而非聊天交互的质量。",
        "time": "01:13:02"
      },
      {
        "question": "AI编程赛道上还有哪些不同方向的探索？",
        "answer": "除了大厂和创业公司在做AI编程的探索外，还存在一些针对非程序员用户的编程工具，比如提供可视化界面、无需看懂代码就能创作小程序的平台，以及专注于特定细分场景如code review、测试、安全性检查等的AI编程工具。",
        "time": "01:16:47"
      },
      {
        "question": "AI编程工具在未来普及后，对个人用户来说会带来什么样的变化？",
        "answer": "AI编程工具将极大地提升个人用户的创造力和幸福感，就像当年设计工具从Photoshop到Sketch的转变一样，用户可以更高效地创造内容，甚至体验到如同发明创造般的快乐，同时降低试错成本，提高创作效率。",
        "time": "01:21:00"
      }
    ],
    "chapters": [
      {
        "time": "00:00:00",
        "title": "字节跳动发布海外AI编程工具及其功能体验讨论",
        "summary": "1月19日，字节跳动新加坡子公司发布了一款面向海外的AI编程工具，该工具支持AI问答代码自动补全、基于代理的AI编程等功能，并能选择中文或英文界面。工具接入了OpenAI和相关平台的最新模型供用户免费使用。嘉宾们分享了对该工具的初步使用体验，其中提到了工具的界面设计优秀，对中文用户友好，功能与VS Code相似，但作为免费工具，吸引了众多程序员的兴趣。"
      },
      {
        "time": "00:03:51",
        "title": "AI编程的全球化竞争与本土化需求",
        "summary": "讨论集中于自然语言编程的未来以及AI编程产品在全球范围内的竞争情况。虽然AI编程理论上无国家或语言的区隔，但不同地区和文化背景下，对产品界面设计、功能需求存在差异，意味着仍需考虑本地化运营。此外，随着AI编程的普及，对于非专业程序员的用户群体，界面和使用习惯的本土化变得尤为重要。同时，讨论还提到了低代码编程和AI编程之间的转变，指出AI编程因其高度通用性，相比低代码编程更具优势，可能实现了行业的降维打击。"
      },
      {
        "time": "00:07:10",
        "title": "AI编程与低代码平台的融合与发展",
        "summary": "对话探讨了AI编程对低代码平台的影响，指出AI降低了编程门槛，但细节控制仍面临挑战。低代码平台因其预制组件和数据管理功能，能与AI编程结合，实现从宏观到细节的可控性。朋友所在网易的Code Wave平台正利用AI帮助用户搭建低代码系统，展现了AI编程从代码补全到自然语言指令、云端环境搭建，再到基础组件集成的多层次应用，面向不同技能水平的用户。"
      },
      {
        "time": "00:11:13",
        "title": "AI编程的两层分化与应用",
        "summary": "在当前的AI编程领域，产品出现了面向专业人士提升效率和面向非专业人士降低门槛的两层分化。专业级工具如Copilot和通义灵码主要服务于专业程序员，而其他工具如CodeX则在初期可能更适用于非专业程序员。对话中提及了基于VS Code的编辑器改进与插件之间的区别，强调了VS Code上的魔改能够突破接口限制，实现更多功能。此外，还回顾了20年前易语言作为中文编程语言如何降低了编程门槛，与现在AI编程将门槛进一步降低至自然语言水平的对比。"
      },
      {
        "time": "00:15:09",
        "title": "AI编程赛道的盈利模式与成功因素",
        "summary": "对话探讨了AI编程为何能在众多AI应用领域中脱颖而出，成为唯一一个盈利的赛道。主要因素包括AI编程赛道的早期启动，积累时间长，以及AI模型在编程任务上的出色表现。此外，AI编程领域的从业者和目标用户均为程序员，对市场有深入理解，有助于产品与市场需求的精准匹配。评论区指出，AI编程极大地提升了工程师的工作效率，且与大模型的严谨语言天然契合，使得它在众多AI应用中显得更为有效和实用。"
      },
      {
        "time": "00:19:03",
        "title": "AI编程对小白开发者和专业开发者的不同影响",
        "summary": "对话讨论了AI编程能力在通用大模型和垂直模型中的应用，强调了编程能力对模型推理能力的提升作用。此外，还探讨了AI编程如何满足小众需求，以及AI编程工具如Cos如何帮助小白开发者快速实现产品创意。专业开发者和小白开发者在使用AI编程时的需求和偏好也有所不同，前者更注重代码质量和复杂工程场景，后者则更依赖自然语言沟通和可视化工具。"
      },
      {
        "time": "00:23:02",
        "title": "AI编程对小白与专业程序员的影响及当前赛道探索",
        "summary": "观察显示，AI编程对新手（小白）和专业程序员在不同场景下产生的影响显著不同。小白在创建新项目时，利用AI编程能获得极大的效率提升，甚至达到十倍或百倍，主要是因为他们通常不需要或不具备维护已有代码的能力。而对于专业程序员，AI编程更多用于辅助处理历史遗留代码的升级维护，虽然他们也会使用AI来搭建初始框架，但更倾向于依赖自己的专业技能来完成关键框架的设计，对AI的信任度相对较低。因此，AI编程对专业程序员的工作效率提升在10%到50%之间。当前，AI编程赛道上的公司如Boss New Business和另一家刚获得1亿美元融资的企业正在积极探索，他们的路线各有不同，显示出AI编程领域的多元化发展。"
      },
      {
        "time": "00:25:08",
        "title": "Boss New在程序员用户中的流行与应用体验",
        "summary": "对话围绕Boss New在程序员用户群体中的流行度及其应用体验展开。讨论指出，尽管Boss New并非排名第一的编程助手，但因其与Cloud 3.5的相互成就，以及在前端开发上易于出成果的特点，受到入门程序员的青睐。通过具体案例展示了Boss New在界面设计和功能实现上的强大能力，同时探讨了其续费情况和商业模式，以及与科sir等其他工具在用户群体和增长速度上的差异。最后，对话还提到了Boss New在中文界面和用户体验优化方面的表现。"
      },
      {
        "time": "00:27:48",
        "title": "AI编程产品的核心竞争力与市场认可度",
        "summary": "对话围绕AI编程产品的核心竞争力和市场认可度展开，强调了用户心智和品牌是AI产品的重要护城河，因为AI应用的开发过程依赖于底层模型，工作量和门槛相对较低。讨论中提到了不同模型如cloud 3.5、ChatGPT和Anthropic在市场中的表现，以及它们如何影响用户对AI能力的认知。同时，还探讨了AI在编程和写作领域的应用，以及如何通过控制AI的每一步输出来提高内容生成的可控性和准确性。"
      },
      {
        "time": "00:32:21",
        "title": "AI编程在个性化产品开发中的应用与潜力",
        "summary": "对话围绕AI编程在个性化产品开发中的应用展开，特别提到了小猫补光灯这一现象级产品的成功案例。讨论指出，该产品成功的关键因素不仅在于其AI编程技术的应用，更在于创始人对用户需求的精准捕捉和强大的推广能力。此外，还探讨了AI编程在未来可能更多地用于满足个人日常工作中零散需求的潜力，而非传统的大规模通用软件开发。这种个性化和定制化的趋势，被看作是AI编程发挥最大价值的领域。"
      },
      {
        "time": "00:35:43",
        "title": "AI编程在软件开发中的应用与影响",
        "summary": "对话探讨了AI编程在软件开发中的应用，包括其作为提高效率的工具以及可能带来的人员裁减问题。讨论了AI编程对于知识工作者的解放与压力增加的双面性，并分享了使用AI编程解决个性化项目需求的实际案例。此外，还提到了AI编程在不同场景下的应用，如表情包制作、个性化产品设计以及满足小众需求的软件开发，强调了其在解决工程师不足或成本高昂问题上的潜力。"
      },
      {
        "time": "00:41:40",
        "title": "AI编程与人类开发者的协作模式及其影响",
        "summary": "对话围绕AI编程与人工编程在实际开发过程中的协作模式展开，探讨了这种协作如何提升开发效率和代码质量。通过类比程序员与AI编程的关系如同与实习生合作，强调了在熟悉AI能力后，程序员能更有效地判断何时应由自己或AI执行任务。此外，讨论了AI编程在企业数字化转型中的应用，特别是在非IT部门如何通过AI编程优化业务流程，以及产品经理等角色如何利用AI编程快速搭建原型，提高工作效率。最后，分析了AI编程的普及阶段，预测未来将有更多人不知不觉中使用AI编程，而AI编程将更多以幕后助手的形式存在，直接解决问题而无需展现代码。"
      },
      {
        "time": "00:48:23",
        "title": "AI编程工具在开发和运维中的应用及未来展望",
        "summary": "讨论中提到，AI编程工具在代码生成、代码补全、代码理解和回退功能方面表现出色，能够显著提升开发效率。此外，AI工具在运维领域也有广泛应用，例如自动生成和执行命令。随着技术进步，AI编程工具正逐步扩展到设计层面，实现界面和代码一体化。评论区反映，AI编程对于代码小白而言，适合自动化任务和简单的项目，而独立开发者可以利用AI工具完成产品宣发，如生成海报。未来，AI编程工具有望帮助用户从入门到精通，逐步成长为专业程序员。"
      },
      {
        "time": "00:52:10",
        "title": "AI编程教育与未来程序员的角色转变",
        "summary": "对话围绕AI编程在教育中的应用及未来程序员角色的变化展开。一方面，许多传统的编程教育者和经验丰富的程序员对AI编程的引入持抗拒态度，认为亲自编写代码是技能提升的关键。另一方面，提出观点认为，随着AI的发展，未来需要的更多是具备领域常识和审美能力、能洞察用户需求和市场的人员，而代码实现的能力相对变得不那么重要。讨论还涉及了AI编程的测试能力以及它如何帮助保障软件质量，提出了与AI协同工作的新编程学习方式。此外，还通过具体例子说明了AI编程在实际应用中的高效性，以及如何改变软件开发的过程和效率。"
      },
      {
        "time": "01:00:17",
        "title": "创新项目：从播客全流程到智能童装",
        "summary": "在一次会场上，发现了多个有趣的创新项目，包括为播客主播提供全流程服务的产品、大学生利用简单词汇生成可理解英语新闻的项目，以及智能童装根据温度自动推荐穿搭方案的产品。这些项目展示了AI技术在解决个性化需求和降低技术门槛方面的潜力，使得需求方可以直接利用AI完成产品开发，避免了传统软件开发中理解和沟通成本的浪费。"
      },
      {
        "time": "01:03:28",
        "title": "AI编程对程序员行业的影响与未来展望",
        "summary": "评论区讨论了AI编程的出现是否意味着实现人人自然语言编程或彻底改变学习编程方式。认为AI编程的高效使用需要高质量的输入和输出，强调了具备系统性思维和学习能力的重要性。讨论指出，虽然AI编程能有效提升学习效果和工作效率，但并非人人能成为程序员，而是需要具备特定的思维和能力。同时，提到了国内大厂如阿里、百度和快手等纷纷涌入AI编程赛道，创业公司如智慧AI硅心科技和星原一码也活跃其中。对比了AI编程在插件和IDE中的应用，展现了AI编程行业的现状和未来潜力。"
      },
      {
        "time": "01:06:11",
        "title": "AI技术在浏览器插件与集成开发环境的演变",
        "summary": "讨论了AI技术在过去一年里从浏览器插件形式向集成开发环境（IDE）形态的演变。原先广泛使用的AI插件在浏览器中填充了各种功能，但逐渐被像豆包、夸克等AI集成浏览器所取代，这些产品将AI搜索、创作、总结等功能集成在自身产品内。此外，提到了类似卡拉house这样的音频连麦功能，也逐渐被大产品如Spotify、Twitter Space等集成，显示了插件功能容易被大产品吸收的趋势。进一步讨论了AI编程产品从AI插件向AIADE（AI集成开发环境）形态的转变，强调了AIADE相比插件具有更广泛的适用性和深度，预示了传统IDE向AIIDE演化的必然趋势，同时指出即使是新的IDE也支持插件，这表明两者的融合过程。"
      },
      {
        "time": "01:09:08",
        "title": "AI编程工具的市场现状与未来竞争",
        "summary": "对话探讨了AI编程工具如通义灵码、百度的commit、商汤的代码小浣熊等在技术路线、功能及定位上的差异。讨论指出，尽管这些工具在功能上存在同质化，但其背后的模型能力构成了核心差距。部分工具更倾向于B端市场，注重稳定性，而有些则朝着更to C、更智能的方向发展，如自动查询网页解决问题。未来的竞争将聚焦于产品交付效率和质量，而非单一的模型能力，强调了AI编程工具的切换成本低，用户会根据实际交付效果选择最优工具。此外，对比了AI编程工具与聊天机器人的不同，指出AI编程工具的交付结果更易量化和比较，因此用户选择更为直接和理性。"
      },
      {
        "time": "01:14:50",
        "title": "AI编程工具的创新与市场探索",
        "summary": "对话探讨了AI在编程领域的应用和创新，特别是AI编程工具如何改变了代码补全、智能IDE的交互方式以及大模型的编码能力。提到了不同方向的探索，包括大厂和创业公司在AI编程赛道上的努力，以及非程序员使用的编程工具的开发。还讨论了AI在代码审查、测试、安全性检查和代码解读等方面的应用，以及AI如何帮助新员工更快地理解项目代码，从而提高工作效率。最后，讨论了AI编程工具普及后，如何激发更多人的创造力和编程兴趣，以及其对未来编程教育和职业发展的影响。"
      },
      {
        "time": "01:19:06",
        "title": "AI模型革新与未来应用前景探讨",
        "summary": "对话聚焦于AI技术，特别是云模型如Cloud 3.5和O3等的更新及其应用潜力。讨论中提到AI技术在编程和创意领域的实际应用，包括其成本、速度和市场接受度的挑战。此外，还探讨了AI技术在协助需求发掘和市场分析方面的局限性，以及个人品牌建设和自媒体在AI时代的重要性。"
      },
      {
        "time": "01:22:05",
        "title": "AI编程的潜力与互联网复兴",
        "summary": "对话中讨论了学习AI编程的乐趣和成就感，以及其相比传统编程工具如WordPress和Cos的易用性。讨论还触及了AI编程对于非专业人士的挑战，特别是在理解变量和部署到云服务如Cloudflare时。此外，讨论还提到AI编程可能重新引发个人网站的复兴，以及过去互联网产品如同步工具的重新兴起。最后，对话强调了AI编程在个人应用中的价值和对未来互联网长尾复兴的期待。"
      }
    ],
    "mindmap": {
      "children": [
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "从插件到独立IDE的演变"
                },
                {
                  "children": [],
                  "content": "支持AI问答、代码自动补全、基于代理的AI编程"
                },
                {
                  "children": [],
                  "content": "集成OpenAI与Topic最新模型"
                }
              ],
              "content": "技术发展"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "自然语言编程支持"
                },
                {
                  "children": [],
                  "content": "中英文界面选择"
                },
                {
                  "children": [],
                  "content": "预览功能"
                }
              ],
              "content": "功能亮点"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "免费试用吸引用户"
                },
                {
                  "children": [],
                  "content": "Windows版本预约中"
                }
              ],
              "content": "市场反应"
            }
          ],
          "content": "AI编程工具概述"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "专业程序员与非专业用户的区分"
                },
                {
                  "children": [],
                  "content": "不同文化与语种的本地化需求"
                }
              ],
              "content": "用户群体"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "全球品牌竞争与本地化运营"
                },
                {
                  "children": [],
                  "content": "付费能力与使用习惯差异"
                }
              ],
              "content": "市场竞争力"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "AI编程对低代码门槛的降低"
                },
                {
                  "children": [],
                  "content": "细节控制与工业化组件结合"
                }
              ],
              "content": "低代码与AI编程的融合"
            }
          ],
          "content": "行业影响与用户反馈"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "模型能力决定编程任务完成质量"
                },
                {
                  "children": [],
                  "content": "编程任务完成效果优于其他领域"
                }
              ],
              "content": "AI编程与模型能力"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "面向专业人士与非专业人士的产品分化"
                },
                {
                  "children": [],
                  "content": "AI编程作为样板型AI应用落地实践"
                }
              ],
              "content": "应用领域分化"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "面向小白用户与专业开发者的不同需求"
                },
                {
                  "children": [],
                  "content": "AI编程在企业内部的协作模式与效率提升"
                }
              ],
              "content": "未来探索方向"
            }
          ],
          "content": "技术与应用趋势"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "自然语言沟通与代码结果确认"
                },
                {
                  "children": [],
                  "content": "需求明确与代码质量控制"
                }
              ],
              "content": "使用心得"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "Copilot与AutoCopilot的区别"
                },
                {
                  "children": [],
                  "content": "从补全代码到自然语言设计产品的层级"
                }
              ],
              "content": "产品差异"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "用户心智与品牌建设"
                },
                {
                  "children": [],
                  "content": "AI编程产品护城河的形成与挑战"
                }
              ],
              "content": "护城河与市场定位"
            }
          ],
          "content": "用户体验与产品差异"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "AI编程工具的普及与市场细分"
                },
                {
                  "children": [],
                  "content": "个人品牌与自媒体能力的重要性"
                }
              ],
              "content": "行业趋势"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "老板思维与AI协作"
                },
                {
                  "children": [],
                  "content": "创造力与个性化需求的满足"
                }
              ],
              "content": "个人发展"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "代码与自媒体结合的超级个体时代"
                },
                {
                  "children": [],
                  "content": "AI编程对个人创造力与工作效率的提升"
                }
              ],
              "content": "未来工作方式"
            }
          ],
          "content": "行业展望与个人发展"
        },
        {
          "children": [
            {
              "children": [
                {
                  "children": [],
                  "content": "AI编程模型的迭代与成本控制"
                },
                {
                  "children": [],
                  "content": "用户体验与交付质量的持续优化"
                }
              ],
              "content": "技术挑战"
            },
            {
              "children": [
                {
                  "children": [],
                  "content": "竞争加剧与用户心智的争夺"
                },
                {
                  "children": [],
                  "content": "从插件到独立产品的市场定位与差异化竞争"
                }
              ],
              "content": "市场挑战"
            }
          ],
          "content": "技术与市场挑战"
        }
      ],
      "content": "AI编程工具与未来软件开发"
    }
  }
}